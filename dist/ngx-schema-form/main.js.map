{"version":3,"sources":["webpack:///./projects/schema-form/src/lib/default.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/array/array.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/button/button.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/checkbox/checkbox.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/defaultwidgetregistry.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/file/file.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/index.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/integer/integer.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/object/object.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/radio/radio.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/range/range.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/select/select.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/string/string.widget.ts","webpack:///./projects/schema-form/src/lib/defaultwidgets/textarea/textarea.widget.ts","webpack:///./projects/schema-form/src/lib/form.component.ts","webpack:///./projects/schema-form/src/lib/formelement.action.component.ts","webpack:///./projects/schema-form/src/lib/formelement.component.ts","webpack:///./projects/schema-form/src/lib/index.ts","webpack:///./projects/schema-form/src/lib/model/actionregistry.ts","webpack:///./projects/schema-form/src/lib/model/arrayproperty.ts","webpack:///./projects/schema-form/src/lib/model/atomicproperty.ts","webpack:///./projects/schema-form/src/lib/model/bindingregistry.ts","webpack:///./projects/schema-form/src/lib/model/booleanproperty.ts","webpack:///./projects/schema-form/src/lib/model/formproperty.ts","webpack:///./projects/schema-form/src/lib/model/formpropertyfactory.ts","webpack:///./projects/schema-form/src/lib/model/numberproperty.ts","webpack:///./projects/schema-form/src/lib/model/objectproperty.ts","webpack:///./projects/schema-form/src/lib/model/schemapreprocessor.ts","webpack:///./projects/schema-form/src/lib/model/stringproperty.ts","webpack:///./projects/schema-form/src/lib/model/utils.ts","webpack:///./projects/schema-form/src/lib/model/validatorregistry.ts","webpack:///./projects/schema-form/src/lib/schema-form.module.ts","webpack:///./projects/schema-form/src/lib/schemavalidatorfactory.ts","webpack:///./projects/schema-form/src/lib/template-schema/button/button.component.html","webpack:///./projects/schema-form/src/lib/template-schema/button/button.component.ts","webpack:///./projects/schema-form/src/lib/template-schema/field/field-parent.ts","webpack:///./projects/schema-form/src/lib/template-schema/field/field.component.html","webpack:///./projects/schema-form/src/lib/template-schema/field/field.component.ts","webpack:///./projects/schema-form/src/lib/template-schema/field/field.ts","webpack:///./projects/schema-form/src/lib/template-schema/field/item/item.component.html","webpack:///./projects/schema-form/src/lib/template-schema/field/item/item.component.ts","webpack:///./projects/schema-form/src/lib/template-schema/template-schema-element.ts","webpack:///./projects/schema-form/src/lib/template-schema/template-schema.directive.ts","webpack:///./projects/schema-form/src/lib/template-schema/template-schema.module.ts","webpack:///./projects/schema-form/src/lib/template-schema/template-schema.service.ts","webpack:///./projects/schema-form/src/lib/terminator.service.ts","webpack:///./projects/schema-form/src/lib/widget.ts","webpack:///./projects/schema-form/src/lib/widgetchooser.component.ts","webpack:///./projects/schema-form/src/lib/widgetfactory.ts","webpack:///./projects/schema-form/src/lib/widgetregistry.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/json-schema-example/binding_sample_bindings.ts","webpack:///./src/app/json-schema-example/json-schema-example.component.html","webpack:///./src/app/json-schema-example/json-schema-example.component.ts","webpack:///./src/app/template-schema-example/template-schema-example.component.css","webpack:///./src/app/template-schema-example/template-schema-example.component.html","webpack:///./src/app/template-schema-example/template-schema-example.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAA0C;AAM1C;IAAA;IAA4B,CAAC;IAAhB,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,oBAAoB;SAC/B,CAAC;OACW,aAAa,CAAG;IAAD,oBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgB;AAEO;AAoBjD;IAAiC,+BAAiB;IAAlD;;IAaA,CAAC;IAXC,6BAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IAED,gCAAU,GAAV,UAAW,KAAa;QACtB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,kCAAY,GAAZ,UAAa,KAAa,EAAE,IAAS;QACnC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAZU,WAAW;QAlBvB,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,+vBAcL;SACN,CAAC;OACW,WAAW,CAavB;IAAD,kBAAC;CAAA,CAbgC,yDAAiB,GAajD;AAbuB;;;;;;;;;;;;;;;;;;;;;;ACtBgB;AAMxC;IAAA;IAGA,CAAC;IAHY,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,mEAAmE;SAC9E,CAAC;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNgC;AAEZ;AA6B7C;IAAoC,kCAAa;IA3BjD;QAAA,qEAyDC;QA5BA,aAAO,GAAQ,EAAE,CAAC;;IA4BnB,CAAC;IA1BA,wCAAe,GAAf;QAAA,iBAgBC;QAfA,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,QAAQ;YACjD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAChC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACzC,QAAQ,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,EAAtB,CAAsB,CAAC,CAAC;gBAC3C,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YAChD,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,QAAQ;YACvC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,gCAAO,GAAP,UAAQ,EAAE;QACT,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QAC/B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IA7BW,cAAc;QA3B1B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,umCAuBL;SACN,CAAC;OACW,cAAc,CA8B1B;IAAD,qBAAC;CAAA,CA9BmC,qDAAa,GA8BhD;AA9B0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BwB;AACG;AACM;AACZ;AACS;AACH;AACH;AACA;AACG;AACA;AACM;AAET;AAEnD;IAA2C,yCAAc;IACvD;QAAA,YACE,iBAAO,SA+BR;QA7BC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAG,+DAAW,CAAC,CAAC;QACrC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAG,kEAAY,CAAC,CAAC;QAEvC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,kEAAY,CAAC,CAAC;QACtC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,kEAAY,CAAC,CAAC;QACtC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,kEAAY,CAAC,CAAC;QACnC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,kEAAY,CAAC,CAAC;QACnC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,kEAAY,CAAC,CAAC;QACrC,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,kEAAY,CAAC,CAAC;QACxC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,kEAAY,CAAC,CAAC;QACrC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,kEAAY,CAAC,CAAC;QACpC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,kEAAY,CAAC,CAAC;QACzC,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,kEAAY,CAAC,CAAC;QAEpC,KAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,qEAAa,CAAC,CAAC;QACxC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,qEAAa,CAAC,CAAC;QACvC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,+DAAW,CAAC,CAAC;QAEpC,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,yEAAc,CAAC,CAAC;QAE1C,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,4DAAU,CAAC,CAAC;QAClC,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,kEAAY,CAAC,CAAC;QACtC,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,+DAAW,CAAC,CAAC;QACpC,KAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,wEAAc,CAAC,CAAC;QACzC,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,wEAAc,CAAC,CAAC;QAE1C,KAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,kEAAY,CAAC,CAAC;QAEtC,KAAI,CAAC,gBAAgB,CAAC,kEAAY,CAAC,CAAC;;IACtC,CAAC;IACH,4BAAC;AAAD,CAAC,CAlC0C,+DAAc,GAkCxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDwD;AAEZ;AAe7C;IAAgC,8BAAa;IAK3C;QAAA,YACE,iBAAO,SACR;QALS,YAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC1B,cAAQ,GAAQ,EAAE,CAAC;;IAI7B,CAAC;IAED,oCAAe,GAAf;QAAA,iBAYC;QAXC,0EAA0E;QAC1E,cAAc;QACd,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;YACtB,KAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC;IACJ,CAAC;IAED,iCAAY,GAAZ,UAAa,MAAM;QACjB,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IA9BU,UAAU;QAbtB,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,4hBASL;SACN,CAAC;;OACW,UAAU,CA+BtB;IAAD,iBAAC;CAAA,CA/B+B,qDAAa,GA+B5C;AA/BsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB4B;AACS;AACZ;AACS;AACH;AACH;AACA;AACG;AACA;AACM;AACN;AACU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTzC;AAEsB;AAiB7C;IAAmC,iCAAa;IAAhD;;IAAkD,CAAC;IAAtC,aAAa;QAfzB,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,qmBAWL;SACN,CAAC;OACW,aAAa,CAAyB;IAAD,oBAAC;CAAA,CAAhB,qDAAa,GAAG;AAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBgB;AAEQ;AAYlD;IAAkC,gCAAkB;IAApD;;IAAuD,CAAC;IAA3C,YAAY;QAVxB,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,mXAMA;SACX,CAAC;OACW,YAAY,CAA+B;IAAD,mBAAC;CAAA,CAAtB,0DAAkB,GAAI;AAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiB;AAEG;AAgB7C;IAAiC,+BAAa;IAA9C;;IAAgD,CAAC;IAApC,WAAW;QAdvB,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,+jBAUL;SACN,CAAC;OACW,WAAW,CAAyB;IAAD,kBAAC;CAAA,CAAhB,qDAAa,GAAG;AAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBkB;AAEG;AAc7C;IAAiC,+BAAa;IAA9C;;IAAgD,CAAC;IAApC,WAAW;QAZvB,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,miBAQL;SACN,CAAC;OACW,WAAW,CAAyB;IAAD,kBAAC;CAAA,CAAhB,qDAAa,GAAG;AAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBkB;AAEG;AAwB7C;IAAkC,gCAAa;IAA/C;;IAAiD,CAAC;IAArC,YAAY;QAtBxB,+DAAS,CAAC;YACV,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,k5BAkBJ;SACN,CAAC;OACW,YAAY,CAAyB;IAAD,mBAAC;CAAA,CAAhB,qDAAa,GAAG;AAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BiB;AAEG;AAsB7C;IAAkC,gCAAa;IAA/C;;IASA,CAAC;IAPG,mCAAY,GAAZ;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;QACjC,CAAC;IACL,CAAC;IARQ,YAAY;QApBxB,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,mhCAgBG;SACd,CAAC;OACW,YAAY,CASxB;IAAD,mBAAC;CAAA,CATiC,qDAAa,GAS9C;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBiB;AAEG;AAiB7C;IAAoC,kCAAa;IAAjD;;IAAmD,CAAC;IAAvC,cAAc;QAf1B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,QAAQ,EAAE,iiBAWL;SACN,CAAC;OACW,cAAc,CAAyB;IAAD,qBAAC;CAAA,CAAhB,qDAAa,GAAG;AAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXJ;AACkD;AAGnB;AAEU;AACF;AACF;AAGJ;AAEQ;AAClB;AACS;AAEjD,oBAAqB,sBAAsB,EAAE,iBAAiB;IAClE,MAAM,CAAC,IAAI,8EAAmB,CAAC,sBAAsB,EAAE,iBAAiB,CAAC,CAAC;AAC5E,CAAC;AA4BD;IA0BE,uBACU,mBAAwC,EACxC,cAA8B,EAC9B,iBAAoC,EACpC,eAAgC,EAChC,GAAsB,EACtB,UAA6B;QAL7B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,QAAG,GAAH,GAAG,CAAmB;QACtB,eAAU,GAAV,UAAU,CAAmB;QA9B9B,WAAM,GAAQ,IAAI,CAAC;QAInB,YAAO,GAAmC,EAAE,CAAC;QAE7C,eAAU,GAAkC,EAAE,CAAC;QAE/C,aAAQ,GAAgC,EAAE,CAAC;QAE1C,aAAQ,GAAG,IAAI,0DAAY,EAAkB,CAAC;QAE9C,gBAAW,GAAG,IAAI,0DAAY,EAAO,CAAC;QAEtC,YAAO,GAAG,IAAI,0DAAY,EAAW,CAAC;QAEtC,kBAAa,GAAG,IAAI,0DAAY,EAAoB,CAAC;QAErD,mBAAc,GAAG,IAAI,0DAAY,EAAgB,CAAC;QAE5D,iBAAY,GAAiB,IAAI,CAAC;IAW9B,CAAC;sBAjCM,aAAa;IAmCxB,kCAAU,GAAV,UAAW,GAAQ;QACjB,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAED,wCAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAC/B,CAAC;QACJ,CAAC;IACH,CAAC;IAED,iBAAiB;IACjB,yCAAiB,GAAjB,UAAkB,EAAO;IACzB,CAAC;IAED,iBAAiB;IACjB,+CAA+C;IAE/C,mCAAW,GAAX,UAAY,OAAsB;QAAlC,iBA4CC;QA3CC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC5B,CAAC;YAED,4EAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,8CAA8C;YAChD,CAAC;YAED,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CACtC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAC/B,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,eAAK;gBAC7C,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;gBACxC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;QAEL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC;IAEH,CAAC;IAEO,qCAAa,GAArB;QACE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAC,IAAM,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC7E,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAEO,kCAAU,GAAlB;QACE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,CAAC,IAAM,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC1C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjE,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAEO,mCAAW,GAAnB;QACE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAM,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACxC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC9C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;gBACzE,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAEM,6BAAK,GAAZ;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,CAAC;IAEO,gCAAQ,GAAhB,UAAiB,KAAU;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;IACH,CAAC;IAEO,sCAAc,GAAtB,UAAuB,KAAK;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACrB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QAED,0BAA0B;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;IACrC,CAAC;IAhKQ;QAAR,2DAAK,EAAE;;iDAAoB;IAEnB;QAAR,2DAAK,EAAE;;gDAAY;IAEX;QAAR,2DAAK,EAAE;;kDAA8C;IAE7C;QAAR,2DAAK,EAAE;;qDAAgD;IAE/C;QAAR,2DAAK,EAAE;;mDAA4C;IAE1C;QAAT,4DAAM,EAAE;;mDAA+C;IAE9C;QAAT,4DAAM,EAAE;;sDAAuC;IAEtC;QAAT,4DAAM,EAAE;;kDAAuC;IAEtC;QAAT,4DAAM,EAAE;;wDAAsD;IAErD;QAAT,4DAAM,EAAE;;yDAAmD;IApBjD,aAAa;QA1BzB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;YACnB,QAAQ,EAAE,sIAIA;YACV,SAAS,EAAE;gBACT,oEAAc;gBACd,0EAAiB;gBACjB,sEAAe;gBACf,4EAAkB;gBAClB,4DAAa;gBACb;oBACE,OAAO,EAAE,8EAAmB;oBAC5B,UAAU,EAAE,UAAU;oBACtB,IAAI,EAAE,CAAC,8EAAsB,EAAE,0EAAiB,CAAC;iBAClD;gBACD,qEAAiB;gBACjB;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,WAAW,EAAE,eAAa;oBAC1B,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;yCA4B+B,8EAAmB;YACxB,oEAAc;YACX,0EAAiB;YACnB,sEAAe;YAC3B,+DAAiB;YACV,qEAAiB;OAhC5B,aAAa,CAmKzB;IAAD,oBAAC;;CAAA;AAnKyB;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CH;AAEuB;AACS;AAMvD;IAaE,oCAAoB,aAAmC,EACnC,UAA6B;QAD7B,oDAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;QACnC,eAAU,GAAV,UAAU,CAAmB;IACjD,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAO;YACrD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC;QAC3F,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACrD,CAAC;IAED,gDAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IA9BD;QADC,2DAAK,EAAE;;8DACI;IAGZ;QADC,2DAAK,EAAE;;oEACU;IAE6B;QAA9C,+DAAS,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,8DAAgB,EAAC,CAAC;kCAAY,8DAAgB;iEAAC;IARhE,0BAA0B;QAJtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,QAAQ,EAAE,qCAAqC;SAChD,CAAC;yCAcmC,4DAAa;YAChB,qEAAiB;OAdtC,0BAA0B,CAkCtC;IAAD,iCAAC;CAAA;AAlCsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdhB;AAIC;AAI8B;AACJ;AACM;AAiBxD;IAaE,8BAAoB,cAA8B,EAC9B,eAAgC,EAChC,QAAmB,EACnB,UAAsB;QAHtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;QAX1C,YAAO,GAAgB,IAAI,0DAAW,CAAC,EAAE,EAAE,cAAM,WAAI,EAAJ,CAAI,CAAC,CAAC;QAEvD,WAAM,GAAgB,IAAI,CAAC;QAE3B,YAAO,GAAG,EAAE,CAAC;QAEb,aAAQ,GAAG,EAAE,CAAC;IAMd,CAAC;6BAjBU,oBAAoB;IAmB/B,uCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,4CAAa,GAArB;QAAA,iBASC;QARC,IAAM,QAAQ,GAAc,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC7E,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5B,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;gBACvB,GAAG,CAAC,CAAC,IAAM,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,4CAAa,GAArB,UAAsB,OAAO,EAAE,QAAQ;QAAvC,iBAUC;QATC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EACnE,OAAO,EACP,UAAC,KAAK;YACJ,EAAE,CAAC,CAAC,QAAQ,YAAY,QAAQ,CAAC,CAAC,CAAC;gBACjC,QAAQ,CAAC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,IAAI,CAAC,2CAA2C,GAAG,OAAO,GAAG,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC9G,CAAC;QACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,2CAAY,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC;YAEhD,GAAG,CAAC,CAAe,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;gBAA1B,IAAI,MAAM;gBACb,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;aACnC;QACH,CAAC;IACH,CAAC;IAEO,mDAAoB,GAA5B,UAA6B,MAAM;QAAnC,iBAUC;QATC,MAAM,CAAC,MAAM,GAAG,UAAC,CAAC;YAChB,IAAI,MAAM,CAAC;YACX,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/D,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,MAAM,CAAC,KAAI,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;gBAC/C,CAAC;YACH,CAAC;YACD,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,mDAAoB,GAApB,UAAqB,MAAmB;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,EAAE,GAAG,OAAO,GAAG,CAAC,sBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC;QAEpD,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;QAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACrC,CAAC;IAED,0CAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,IAAI;gBACzB,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IApFc,4BAAO,GAAG,CAAC,CAAC;IAElB;QAAR,2DAAK,EAAE;kCAAe,gEAAY;8DAAC;IAJzB,oBAAoB;QAbhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,gdASD;SACV,CAAC;yCAcoC,oEAAc;YACb,sEAAe;YACtB,uDAAS;YACP,wDAAU;OAhB/B,oBAAoB,CAwFhC;IAAD,2BAAC;;CAAA;AAxFgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BgB;AACc;AACa;AACT;AACjB;AAEY;AAEN;AAEE;AACiC;AAMzE;AAcQ;AAC8B;AACwB;;;;;;;;;;;;;;AC/BhF;AAAA;IAAA;QACE,YAAO,GAA4B,EAAE,CAAC;IAaxC,CAAC;IAXC,8BAAK,GAAL;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,iCAAQ,GAAR,UAAS,QAAgB,EAAE,MAAc;QACvC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;IAClC,CAAC;IAED,4BAAG,GAAH,UAAI,QAAgB;QAClB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB0D;AAK3D;IAAmC,iCAAa;IAE9C,uBAAoB,mBAAwC,EAChD,sBAA8C,EAC9C,iBAAoC,EACpC,MAAW,EACX,MAAqB,EACrB,IAAY;QALxB,YAME,kBAAM,sBAAsB,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,SACvE;QAPmB,yBAAmB,GAAnB,mBAAmB,CAAqB;;IAO5D,CAAC;IAED,+BAAO,GAAP,UAAQ,KAAiB;QAAjB,oCAAiB;QACvB,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACrC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEO,mCAAW,GAAnB;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClE,IAAI,CAAC,UAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAED,kCAAU,GAAV,UAAW,KAAa;QACL,IAAI,CAAC,UAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAQ,GAAR,UAAS,KAAU,EAAE,QAAiB;QACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEM,iCAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,oCAAY,GAAnB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEO,mCAAW,GAAnB;QACE,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,UAAC,QAAQ,EAAE,CAAC;YAC5B,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC7C,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,6BAAK,GAAL,UAAM,KAAU,EAAE,QAAe;QAAf,0CAAe;QAC/B,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAEO,wCAAgB,GAAxB;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAGO,uCAAe,GAAvB,UAAwB,KAAU;QAChC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAClC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;YACnC,CAAC;QACH,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,CAxEkC,2DAAa,GAwE/C;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7E2C;AAE5C;IAA6C,kCAAY;IAAzD;;IA+BA,CAAC;IA7BC,iCAAQ,GAAR,UAAS,KAAK,EAAE,QAAgB;QAAhB,2CAAgB;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,8BAAK,GAAL,UAAM,KAAiB,EAAE,QAAe;QAAlC,oCAAiB;QAAE,0CAAe;QACtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,mCAAU,GAAV,UAAW,KAAU;QACnB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACnB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;gBACtC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/B,CAAC;QACH,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAEM,kCAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC;IAC7C,CAAC;IAIM,qCAAY,GAAnB;IACA,CAAC;IACH,qBAAC;AAAD,CAAC,CA/B4C,0DAAY,GA+BxD;;;;;;;;;;;;;;;AC/BD;AAAA;IAAA;QACE,aAAQ,GAAc,EAAE,CAAC;IAa3B,CAAC;IAXC,+BAAK,GAAL;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,kCAAQ,GAAR,UAAS,IAAY,EAAE,OAA4B;QACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,6BAAG,GAAH,UAAI,IAAY;QACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBiD;AAElD;IAAqC,mCAAc;IAAnD;;IAKA,CAAC;IAHC,uCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACH,sBAAC;AAAD,CAAC,CALoC,8DAAc,GAKlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP+D;AACL;AAK3D;IAaE,sBAAY,sBAA8C,EACtC,iBAAoC,EACrC,MAAW,EAClB,MAAqB,EACrB,IAAY;QAHJ,sBAAiB,GAAjB,iBAAiB,CAAmB;QACrC,WAAM,GAAN,MAAM,CAAK;QAZ9B,WAAM,GAAQ,IAAI,CAAC;QACnB,YAAO,GAAQ,IAAI,CAAC;QACZ,kBAAa,GAAG,IAAI,oDAAe,CAAM,IAAI,CAAC,CAAC;QAC/C,mBAAc,GAAG,IAAI,oDAAe,CAAM,IAAI,CAAC,CAAC;QAChD,aAAQ,GAAG,IAAI,CAAC;QAChB,uBAAkB,GAAG,IAAI,oDAAe,CAAU,IAAI,CAAC,CAAC;QAU9D,IAAI,CAAC,eAAe,GAAG,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,YAAY,aAAa,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAuB,IAAI,CAAC;QACxC,CAAC;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,sBAAW,sCAAY;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAW,uCAAa;aAAxB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAW,8BAAI;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC1B,CAAC;;;OAAA;IAED,sBAAW,gCAAM;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,sBAAW,8BAAI;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,IAAwB,IAAI,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAW,8BAAI;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAW,+BAAK;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAW,iCAAO;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAED,sBAAW,+BAAK;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC;QAC/B,CAAC;;;OAAA;IAMM,6CAAsB,GAA7B,UAA8B,QAAgB,EAAE,SAAgB;QAAlC,2CAAgB;QAAE,4CAAgB;QAC9D,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC1D,CAAC;IAEH,CAAC;IAYD;;OAEG;IACI,qCAAc,GAArB;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrD,IAAI,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5D,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpB,IAAI,YAAY,GAAG,eAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtE,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;QAClD,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,MAAM,EAAE,SAAS;QACnC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,GAAG,MAAM,CAAC,MAAM,OAAb,MAAM,EAAW,SAAS,CAAC,CAAC;YACvC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACzB,CAAC;QACH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEO,gCAAS,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAEM,mCAAY,GAAnB,UAAoB,MAAM;QACxB,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,qCAAc,GAAd,UAAe,IAAY;QACzB,IAAI,IAAI,GAAiB,IAAI,CAAC;QAC9B,IAAI,IAAI,GAAkB,IAAI,CAAC;QAE/B,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACvB,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,MAAM,KAAK,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;gBAC/C,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAEM,+BAAQ,GAAf;QACE,IAAI,QAAQ,GAAiB,IAAI,CAAC;QAClC,OAAO,QAAQ,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YAChC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC;QACD,MAAM,CAAgB,QAAQ,CAAC;IACjC,CAAC;IAEO,iCAAU,GAAlB,UAAmB,OAAgB;QACjC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,4GAA4G;IACrG,sCAAe,GAAtB;QAAA,iBAmCC;QAlCC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QACtC,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YACjC,IAAI,iBAAiB,GAAG,EAAE,CAAC;oCAClB,cAAc;gBACrB,EAAE,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,QAAQ,GAAG,OAAK,cAAc,CAAC,cAAc,CAAC,CAAC;oBACnD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACb,IAAM,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,0DAAG,CAC/C,eAAK;4BACH,EAAE,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gCACtD,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;4BAC1B,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;4BACzD,CAAC;wBACH,CAAC,CACF,CAAC,CAAC;wBACH,IAAM,eAAe,GAAG,QAAQ,CAAC,kBAAkB,CAAC;wBACpD,IAAM,GAAG,GAAG,0DAAa,CAAC,CAAC,UAAU,EAAE,eAAe,CAAC,EAAE,UAAC,EAAE,EAAE,EAAE,IAAK,SAAE,IAAI,EAAE,EAAR,CAAQ,CAAC,CAAC;wBAC/E,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC9B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,IAAI,CAAC,uBAAuB,GAAG,cAAc,GAAG,2BAA2B,GAAG,OAAK,IAAI,CAAC,CAAC;oBACnG,CAAC;gBACH,CAAC;YACH,CAAC;;YApBD,GAAG,CAAC,CAAC,IAAI,cAAc,IAAI,SAAS,CAAC;wBAA5B,cAAc;aAoBtB;YAED,0DAAa,CAAC,iBAAiB,EAAE;gBAAC,gBAAoB;qBAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;oBAApB,2BAAoB;;gBACpD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC,IAAI,CAAC,2EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,OAAO;gBAChD,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACH,mBAAC;AAAD,CAAC;;AAED;IAA4C,iCAAY;IAAxD;QAAA,qEAgDC;QA9CC,gBAAU,GAAqD,IAAI,CAAC;;IA8CtE,CAAC;IA5CC,mCAAW,GAAX,UAAY,IAAY;QACtB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,UAAU,GAAG,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEvE,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,QAAQ,KAAK,IAAI,IAAI,UAAU,KAAK,CAAC,CAAC,IAAI,QAAQ,YAAY,aAAa,CAAC,CAAC,CAAC;YAChF,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;YAC1C,QAAQ,GAAmB,QAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC;QACD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAEM,oCAAY,GAAnB,UAAoB,EAAqD;QACvE,GAAG,CAAC,CAAC,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC/C,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC3C,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC;IACH,CAAC;IAEM,6CAAqB,GAA5B,UAA6B,EAAwC;QACnE,IAAI,CAAC,YAAY,CAAC,UAAC,KAAK;YACtB,EAAE,CAAC,KAAK,CAAC,CAAC;YACV,EAAE,CAAC,CAAC,KAAK,YAAY,aAAa,CAAC,CAAC,CAAC;gBACnB,KAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;YACnD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,uCAAe,GAAtB;QACE,iBAAM,eAAe,WAAE,CAAC;QACxB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAEO,gDAAwB,GAAhC;QACE,IAAI,CAAC,qBAAqB,CAAC,UAAC,QAAQ;YAClC,QAAQ,CAAC,eAAe,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,8BAAM,GAAb;QACE,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;IAC5B,CAAC;IACH,oBAAC;AAAD,CAAC,CAhD2C,YAAY,GAgDvD;;;;;;;;;;;;;;;;;;;;;;ACpQ0D;AACX;AACA;AACE;AACF;AACF;AAI9C;IACE,6BAAoB,sBAA8C,EAAU,iBAAoC;QAA5F,2BAAsB,GAAtB,sBAAsB,CAAwB;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;IAChH,CAAC;IAED,4CAAc,GAAd,UAAe,MAAW,EAAE,MAA4B,EAAE,UAAmB;QAAjD,sCAA4B;QACtD,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC;YACpB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,GAAG,CAAC;YACd,CAAC;YACD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC7B,IAAI,IAAI,UAAU,CAAC;YACrB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBACnC,IAAI,IAAI,GAAG,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,+DAA+D,GAAG,MAAM,CAAC,IAAI,CAAC;YACtF,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,GAAG,GAAG,CAAC;QACb,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAChB,IAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YACzF,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC7D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;gBACpB,KAAK,SAAS,CAAC;gBACf,KAAK,QAAQ;oBACX,WAAW,GAAG,IAAI,8DAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC5G,KAAK,CAAC;gBACR,KAAK,QAAQ;oBACX,WAAW,GAAG,IAAI,8DAAc,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC5G,KAAK,CAAC;gBACR,KAAK,SAAS;oBACZ,WAAW,GAAG,IAAI,gEAAe,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC7G,KAAK,CAAC;gBACR,KAAK,QAAQ;oBACX,WAAW,GAAG,IAAI,8DAAc,CAAC,IAAI,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBAClH,KAAK,CAAC;gBACR,KAAK,OAAO;oBACV,WAAW,GAAG,IAAI,4DAAa,CAAC,IAAI,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;oBACjH,KAAK,CAAC;gBACR;oBACE,MAAM,IAAI,SAAS,CAAC,oBAAkB,MAAM,CAAC,IAAM,CAAC,CAAC;YACzD,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,WAAW,YAAY,2DAAa,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEO,4CAAc,GAAtB,UAAuB,YAA2B;QAChD,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/B,YAAY,CAAC,eAAe,EAAE,CAAC;IACjC,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrE+C;AAEhD;IAAoC,kCAAc;IAAlD;;IAiBA,CAAC;IAfC,sCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAK,EAAE,QAAgB;QAAhB,2CAAgB;QAC9B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC5E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAK,GAAG,IAAI,CAAC;YACf,CAAC;QACH,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IACH,qBAAC;AAAD,CAAC,CAjBmC,8DAAc,GAiBjD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB4C;AAK7C;IAAoC,kCAAa;IAI/C,wBAAoB,mBAAwC,EAChD,sBAA8C,EAC9C,iBAAoC,EACpC,MAAW,EACX,MAAqB,EACrB,IAAY;QALxB,YAME,kBAAM,sBAAsB,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,SAEvE;QARmB,yBAAmB,GAAnB,mBAAmB,CAAqB;QAFpD,kBAAY,GAAa,EAAE,CAAC;QASlC,KAAI,CAAC,gBAAgB,EAAE,CAAC;;IAC1B,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAU,EAAE,QAAiB;QACpC,GAAG,CAAC,CAAC,IAAM,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;YAChE,CAAC;QACH,CAAC;QACD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,8BAAK,GAAL,UAAM,KAAU,EAAE,QAAe;QAAf,0CAAe;QAC/B,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,wCAAe,GAAf,UAAgB,KAAU;QACxB,GAAG,CAAC,CAAC,IAAM,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;IACH,CAAC;IAED,yCAAgB,GAAhB;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,GAAG,CAAC,CAAC,IAAM,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACtD,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBAC1D,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,cAAc,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;gBACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACrC,CAAC;QACH,CAAC;IACH,CAAC;IAEM,kCAAS,GAAhB;QACE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;IAC1C,CAAC;IAEM,qCAAY,GAAnB;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,uCAAc,GAArB;QAAA,iBAWC;QAVC,iBAAM,cAAc,WAAE,CAAC;QAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,eAAK;gBACxB,IAAM,IAAI,GAAG,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACT,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,oCAAW,GAAnB;QACE,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,UAAC,QAAQ,EAAE,UAAkB;YAC7C,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC7C,KAAK,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IACH,qBAAC;AAAD,CAAC,CA/EmC,2DAAa,GA+EhD;;;;;;;;;;;;;;;;;ACpF+B;AAEhC,uBAAuB,OAAO,EAAE,IAAI;IAClC,MAAM,CAAC,sBAAoB,IAAI,UAAK,OAAS,CAAC;AAChD,CAAC;AAED,qBAAqB,OAAO,EAAE,IAAI;IAChC,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACxC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,uBAAuB,OAAO,EAAE,IAAI;IAClC,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACxC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC;AAED;IAAA;IAiKA,CAAC;IA/JQ,6BAAU,GAAjB,UAAkB,UAAe,EAAE,IAAU;QAAV,iCAAU;QAC3C,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;QAC9B,kBAAkB,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,kBAAkB,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACrD,kBAAkB,CAAC,uBAAuB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACvC,kBAAkB,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAClD,CAAC;QACD,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QAC/C,kBAAkB,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAEc,kCAAe,GAA9B,UAA+B,UAAU,EAAE,IAAY;QACrD,EAAE,CAAC,CAAC,sDAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnC,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC;YAC3B,aAAa,CAAC,2FAA2F,EAAE,IAAI,CAAC,CAAC;QACnH,CAAC;IACH,CAAC;IAEc,0CAAuB,GAAtC,UAAuC,UAAe,EAAE,IAAY;QAClE,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;YACvC,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACnC,kBAAkB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;YACzD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,kBAAkB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YACjD,CAAC;QACH,CAAC;QACD,kBAAkB,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACxD,CAAC;IAEc,mCAAgB,GAA/B,UAAgC,UAAU,EAAE,IAAY;QACtD,IAAI,QAAQ,GAAa,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC5D,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,GAAG,CAAC,CAAiB,UAAoB,EAApB,eAAU,CAAC,SAAS,EAApB,cAAoB,EAApB,IAAoB;YAApC,IAAI,QAAQ;YACf,GAAG,CAAC,CAAgB,UAAe,EAAf,aAAQ,CAAC,MAAM,EAAf,cAAe,EAAf,IAAe;gBAA9B,IAAI,OAAO;gBACd,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;oBACtC,UAAU,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAC3B,CAAC;gBACD,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACvC;SACF;QAED,GAAG,CAAC,CAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ;YAAvB,IAAI,OAAO;YACd,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnC,WAAW,CAAI,OAAO,kDAA6C,UAAU,CAAC,OAAO,CAAG,EAAE,IAAI,CAAC,CAAC;gBAClG,CAAC;gBACD,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,WAAW,CAAI,OAAO,gGAA6F,EAAE,IAAI,CAAC,CAAC;YAC7H,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC;gBAC3B,aAAa,CAAC,iCAA+B,OAAS,EAAE,IAAI,CAAC,CAAC;YAChE,CAAC;SACF;QAED,GAAG,CAAC,CAAC,IAAI,iBAAiB,IAAI,UAAU,CAAC,CAAC,CAAC;YACzC,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;gBACjD,aAAa,CAAC,oCAAkC,iBAAiB,8BAA2B,EAAE,IAAI,CAAC,CAAC;YACtG,CAAC;QACH,CAAC;IACH,CAAC;IAEc,kCAAe,GAA9B,UAA+B,UAAU;QACvC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACtD,kBAAkB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAEc,0CAAuB,GAAtC,UAAuC,UAAU;QAC/C,UAAU,CAAC,SAAS,GAAG,CAAC;gBACtB,EAAE,EAAE,kBAAkB;gBACtB,KAAK,EAAE,UAAU,CAAC,KAAK,IAAI,EAAE;gBAC7B,WAAW,EAAE,UAAU,CAAC,WAAW,IAAI,EAAE;gBACzC,IAAI,EAAE,UAAU,CAAC,IAAI,IAAI,EAAE;gBAC3B,MAAM,EAAE,UAAU,CAAC,KAAK;aACzB,CAAC,CAAC;QACH,OAAO,UAAU,CAAC,KAAK,CAAC;IAC1B,CAAC;IAEc,kCAAe,GAA9B,UAA+B,WAAgB;QAC7C,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QAChC,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,GAAG,EAAC,IAAI,EAAE,WAAW,CAAC,IAAI,EAAC,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACtC,MAAM,GAAG,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;QAC1B,CAAC;QACD,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;IAC9B,CAAC;IAEc,6BAAU,GAAzB,UAA0B,UAAU,EAAE,IAAI;QACxC,EAAE,CAAC,CAAC,UAAU,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,WAAW,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAEc,iCAAc,GAA7B,UAA8B,UAAU,EAAE,IAAY;QACpD,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAClD,IAAI,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBACjD,kBAAkB,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;YACD,EAAE,CAAC,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC7C,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACnD,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBAClD,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,EAAE,mBAAiB,OAAS,CAAC,CAAC;wBACzF,kBAAkB,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;oBACnE,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACvC,kBAAkB,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAEc,+CAA4B,GAA3C,UAA4C,UAAU,EAAE,cAAc;QACpE,yBAAyB;QACzB,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YACjC,GAAG,CAAC,CAAC,IAAI,OAAO,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAClD,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI;2BAClC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;wBAC5D,OAAO,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;oBACxC,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;wBAC5D,kBAAkB,CAAC,4BAA4B,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,cAAc,CAAC,CAAC;oBAClG,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;;;;OAOG;IACY,sCAAmB,GAAlC,UAAmC,MAAW;QAC5C,IAAM,UAAU,GAAG;YACf,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,mBAAmB,EAAE;YACjD,EAAE,IAAI,EAAE,QAAQ,EAAK,KAAK,EAAE,cAAc,EAAE;YAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,mBAAmB,EAAE;SACpD,CAAC;QACF,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gCACxB,CAAC;YACR,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACN,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAClB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC;QARD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;oBAA3B,CAAC;SAQT;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLiD;AAElD;IAAoC,kCAAc;IAAlD;;IAMA,CAAC;IAJC,sCAAa,GAAb;QACE,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAEH,qBAAC;AAAD,CAAC,CANmC,8DAAc,GAMjD;;;;;;;;;;;;;;;;;ACRK,mBAAoB,CAAC;IACzB,MAAM,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC;AACvC,CAAC;AAEK,iBAAkB,CAAC;IACvB,MAAM,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,CAAC;AACvC,CAAC;;;;;;;;;;;;;;ACJD;AAAA;IAAA;QACU,eAAU,GAAgB,EAAE,CAAC;IAavC,CAAC;IAXC,oCAAQ,GAAR,UAAS,IAAY,EAAE,SAAoB;QACzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACpC,CAAC;IAED,+BAAG,GAAH,UAAI,IAAY;QACd,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IACH,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB2D;AACf;AAIrB;AAEqC;AACd;AACkB;AACD;AACG;AACA;AACM;AACZ;AACS;AACG;AACT;AACA;AACG;AACA;AACU;AAGnD;AAEsB;AACyC;AACf;AAE1E,IAAM,eAAe,GAAG;IACtB;QACE,OAAO,EAAE,+DAAc;QACvB,QAAQ,EAAE,4FAAqB;KAChC;IACD;QACE,OAAO,EAAE,+EAAsB;QAC/B,QAAQ,EAAE,gFAAuB;KAClC;CACF,CAAC;AAyDF;IAAA;IASA,CAAC;yBATY,gBAAgB;IAEpB,wBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,kBAAgB;YAC1B,SAAS,EAAM,eAAe,QAAC;SAChC,CAAC;IACJ,CAAC;IAPU,gBAAgB;QAvD5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,kEAAmB,CAAC;YACzD,YAAY,EAAE;gBACZ,2EAAoB;gBACpB,yFAA0B;gBAC1B,6DAAa;gBACb,+EAAsB;gBACtB,8DAAa;gBACb,8EAAW;gBACX,iFAAY;gBACZ,iFAAY;gBACZ,uFAAc;gBACd,4EAAU;gBACV,qFAAa;gBACb,wFAAc;gBACd,+EAAW;gBACX,+EAAW;gBACX,kFAAY;gBACZ,kFAAY;aACb;YACD,eAAe,EAAE;gBACf,2EAAoB;gBACpB,yFAA0B;gBAC1B,6DAAa;gBACb,+EAAsB;gBACtB,8EAAW;gBACX,iFAAY;gBACZ,iFAAY;gBACZ,uFAAc;gBACd,4EAAU;gBACV,qFAAa;gBACb,wFAAc;gBACd,+EAAW;gBACX,+EAAW;gBACX,kFAAY;gBACZ,kFAAY;aACb;YACD,OAAO,EAAE;gBACP,6DAAa;gBACb,2EAAoB;gBACpB,yFAA0B;gBAC1B,+EAAsB;gBACtB,8EAAW;gBACX,iFAAY;gBACZ,iFAAY;gBACZ,uFAAc;gBACd,4EAAU;gBACV,qFAAa;gBACb,wFAAc;gBACd,+EAAW;gBACX,+EAAW;gBACX,kFAAY;gBACZ,kFAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAS5B;IAAD,uBAAC;;CAAA;AAT4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGO;AAEpC;IAAA;IAIA,CAAC;IAAD,6BAAC;AAAD,CAAC;;AAED;IAA6C,2CAAsB;IAIjE;QAAA,YACE,iBAAO,SAIR;QAHC,KAAI,CAAC,OAAO,GAAG,IAAI,qCAAO,CAAC;YACvB,iBAAiB,EAAE,KAAK;SAC3B,CAAC,CAAC;;IACL,CAAC;IAED,mDAAiB,GAAjB,UAAkB,MAAW;QAA7B,iBAcC;QAbC,MAAM,CAAC,UAAC,KAAK;YAEX,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC1D,KAAK,GAAG,CAAC,KAAK,CAAC;YACjB,CAAC;YAED,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACrC,IAAI,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YAEvC,KAAI,CAAC,gCAAgC,CAAC,GAAG,CAAC,CAAC;YAE3C,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,2CAAS,GAAT,UAAU,MAAW,EAAE,GAAW;QAChC,8BAA8B;QAC9B,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACnD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QACpC,CAAC;IACH,CAAC;IAEO,kEAAgC,GAAxC,UAAyC,GAAU;QACjD,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,eAAK;gBACjB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,kCAAkC,CAAC,CAAC,CAAC;oBAC7E,KAAK,CAAC,IAAI,GAAG,KAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAG,CAAC;gBACjD,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,+CAAa,GAArB,UAAsB,MAAW,EAAE,GAAW;QAC5C,IAAI,WAAW,GAAG,MAAM,CAAC;QACzB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAG;YACjC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IACH,8BAAC;AAAD,CAAC,CAzD4C,sBAAsB,GAyDlE;;;;;;;;;;;;;ACjED,8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQuB;AAG4C;AAanE;IAAqC,mCAAqB;IAcxD,yBAAoB,UAAsB;QAA1C,YACE,iBAAO,SACR;QAFmB,gBAAU,GAAV,UAAU,CAAY;QAR1C,WAAK,GAAG,EAAE,CAAC;QAMX,WAAK,GAAG,IAAI,0DAAY,EAAO,CAAC;;IAIhC,CAAC;wBAhBU,eAAe;IAkBlB,6CAAmB,GAA3B;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzD,mDAAmD;QACnD,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QAC3B,CAAC;IAEH,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IA3BD;QADC,2DAAK,EAAE;;+CACG;IAGX;QADC,2DAAK,EAAE;;kDACG;IAGX;QADC,2DAAK,EAAE;;mDACgB;IAGxB;QADC,4DAAM,EAAE;;kDACuB;IAZrB,eAAe;QAV3B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;YAErB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,8EAAqB;oBAC9B,WAAW,EAAE,gEAAU,CAAC,cAAM,wBAAe,EAAf,CAAe,CAAC;iBAC/C;aACF;SACF,CAAC;yCAegC,wDAAU;OAd/B,eAAe,CAgC3B;IAAD,sBAAC;;CAAA,CAhCoC,8EAAqB,GAgCzD;AAhC2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBuC;AAExB;AAE3C;IAA0C,+BAAqB;IAA/D;QAAA,qEA2FC;QAzFC,UAAI,GAAG,EAAE,CAAC;;IAyFZ,CAAC;IAtFC,sBAAI,6BAAI;aAAR;YACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC;YAED,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,CAAC;;;OAAA;IAMD,gCAAU,GAAV;QAAA,iBA4BC;QA1BC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,KAAK;YAEzC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBACf,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7D,yBAAyB;gBACzB,MAAM,CAAC,EAAE,GAAG,KAAI,CAAC,IAAI,GAAG,YAAY,GAAG,GAAG,GAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC5D,CAAC;YAED,mDAAmD;YACnD,KAAI,CAAC,cAAc,CAAC,QAAQ,CAC1B,MAAM,CAAC,EAAE,EACT,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CACrC,CAAC;YAEF,IAAM,OAAO,GAAQ;gBACnB,EAAE,EAAE,MAAM,CAAC,EAAE;gBACb,KAAK,EAAE,MAAM,CAAC,KAAK;aACpB,CAAC;YAEF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAClB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;YACjC,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QAEjB,CAAC,CAAC,CAAC;IACL,CAAC;IAES,yCAAmB,GAA7B,UACE,MAAe;QAGf,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,UAAU,EAAE,KAAK;YACrC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;QAClD,CAAC,EAAE,EAAE,CAAC,CAAC;IAET,CAAC;IAES,qCAAe,GAAzB,UAA0B,MAAe;QAAzC,iBAgCC;QA/BC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,MAAW,EAAE,KAAK;YAEtC,MAAM,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,KAAK,gDAAS,CAAC,KAAK;oBAClB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;oBACjC,KAAK,CAAC;gBAER;oBACE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;wBACvB,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;oBACzB,CAAC;oBAED,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;oBAClD,KAAK,CAAC;YACV,CAAC;YAED,IAAM,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YACnC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;YACvB,CAAC;YACD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAEH,kBAAC;AAAD,CAAC,CA3FyC,8EAAqB,GA2F9D;;;;;;;;;;;;;ACpGD,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcuB;AACkB;AAImB;AAIO;AACN;AAEhB;AACF;AACW;AAOtD;IAAoC,kCAAW;IA6C7C,wBACU,UAAsB,EACtB,qBAA4C,EAC1C,cAA8B;QAH1C,YAKE,iBAAO,SACR;QALS,gBAAU,GAAV,UAAU,CAAY;QACtB,2BAAqB,GAArB,qBAAqB,CAAuB;QAC1C,oBAAc,GAAd,cAAc,CAAgB;QAhC1C,UAAI,GAAG,gDAAS,CAAC,MAAM,CAAC;QA2BxB,YAAM,GAAQ,EAAG,CAAC;;IAQlB,CAAC;uBAnDU,cAAc;IAqDzB,kCAAS,GAAT;QAAA,iBA6DC;QA3DO,oGAEL,EAFO,0BAAU,EAAE,gBAAK,EAAE,sBAAQ,CAEjC;QAEF,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAE9B,IAAM,MAAM,GAAQ;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,CAAC;QAED,EAAE,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;QACjC,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;QAED,wBAAwB;QACxB,EAAE,CAAC,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAClC,CAAC;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC;QAED,iCAAiC;QACjC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAE5C,CAAC;IAED,sCAAa,GAAb;QAAA,iBAmBC;QAjBC,4EAA4E;QAC5E,IAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAC9C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,eAAK,IAAI,YAAK,KAAK,KAAI,EAAd,CAAc,CAAC,CACjD,CAAC;QACF,IAAM,UAAU,GAAG,eAAe,CAAC,GAAG,CAAC,UAAC,EAAmB;gBAAjB,cAAI,EAAE,wBAAS;YACvD,MAAM,CAAC;gBACL,IAAI,EAAE,KAAI,CAAC,IAAI,GAAG,IAAI;gBACtB,SAAS;aACV,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,UAAU,CAAC;QACpB,CAAC;QAED,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAChE,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IAED,oCAAW,GAAX,UAAY,OAAsB;QAEhC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACpB,GAAG,CAAC,CAAc,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI;gBAAjB,IAAM,GAAG;gBACZ,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;oBAClC,sDAAsD;oBACtD,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;oBACrC,KAAK,CAAC;gBACR,CAAC;aACF;QACH,CAAC;IAEH,CAAC;IAGO,iCAAQ,GAAhB;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAC;QACT,CAAC;QAED,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,EAAsB;gBAApB,gBAAK,EAAE,4BAAW;YACrD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,WAAW,eAAE,CAAC;YACxC,CAAC;YAED,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,eAAE,CAAC;QACtC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC;QACT,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAGO,4CAAmB,GAA3B;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzD,oDAAoD;QACpD,EAAE,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,2CAAkB,GAAlB;QAAA,iBAWC;QATC,WAAW;QACX,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,kDAAK,CACH,IAAI,CAAC,WAAW,CAAC,OAAO,EACxB,IAAI,CAAC,UAAU,CAAC,OAAO,EACvB,IAAI,CAAC,YAAY,CAAC,OAAO,CAC1B;aACA,SAAS,CAAC,cAAM,YAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,EAApC,CAAoC,CAAC,CAAC;IACzD,CAAC;IA/LD;QADC,qEAAe,CAAC,gBAAc,CAAC;kCACnB,uDAAS;uDAAiB;IAGvC;QADC,qEAAe,CAAC,kEAAa,CAAC;kCACnB,uDAAS;sDAAgB;IAGrC;QADC,qEAAe,CAAC,wEAAe,CAAC;kCACnB,uDAAS;wDAAkB;IAGzC;QADC,2DAAK,EAAE;;gDACK;IAGb;QADC,2DAAK,EAAE;;gDACgB;IAGxB;QADC,2DAAK,EAAE;;kDACO;IAGf;QADC,2DAAK,EAAE;;oDACU;IAGlB;QADC,2DAAK,EAAE;;oDACU;IAGlB;QADC,2DAAK,EAAE;;iDACM;IAGd;QADC,2DAAK,EAAE;;uDACY;IAGpB;QADC,2DAAK,EAAE;;uDACY;IAGpB;QADC,2DAAK,EAAE;;kDACgB;IAGxB;QADC,2DAAK,EAAE;;qDACa;IAGrB;QADC,2DAAK,EAAE;;kDACU;IA3CP,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;yCA+CsB,wDAAU;YACC,8EAAqB;YAC1B,oEAAc;OAhD/B,cAAc,CAqM1B;IAAD,qBAAC;;CAAA,CArMmC,yDAAW,GAqM9C;AArM0B;;;;;;;;;;;;;;;ACjC3B,IAAY,SAOX;AAPD,WAAY,SAAS;IACnB,8BAAiB;IACjB,8BAAiB;IACjB,4BAAe;IACf,gCAAmB;IACnB,gCAAoB;IACpB,8BAAiB;AACnB,CAAC,EAPW,SAAS,KAAT,SAAS,QAOpB;;;;;;;;;;;;ACTD,8C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMuB;AAE+C;AAOtE;IAAmC,iCAAqB;IAOtD,uBAAoB,UAAsB;QAA1C,YACE,iBAAO,SACR;QAFmB,gBAAU,GAAV,UAAU,CAAY;;IAE1C,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1D,CAAC;IAVD;QADC,2DAAK,EAAE;;gDACG;IAHA,aAAa;QAJzB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;SAEpB,CAAC;yCAQgC,wDAAU;OAP/B,aAAa,CAezB;IAAD,oBAAC;CAAA,CAfkC,8EAAqB,GAevD;AAfyB;;;;;;;;;;;;;;ACb1B;AAAA;IAAA;IAeA,CAAC;IAbC,8CAAc,GAAd,UAAe,UAAsB;QACnC,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAM,IAAI,GAAgB,KAAK,CAAC,MAAM,CAAC,UAAC,EAAe;YACrD,MAAM,CAAC,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC,SAAS,CAAC;QACtC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAET,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC/B,CAAC;IAEH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsB;AACM;AAEqB;AACO;AACM;AACL;AAEQ;AACT;AACR;AACW;AACT;AASnD;IAA6C,2CAAW;IAQtD,iCACY,cAA8B,EAC9B,iBAAoC,EACtC,aAA4B,EAC5B,iBAAoC,EACpC,qBAA4C;QALtD,YAOE,iBAAO,SACR;QAPW,oBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAiB,GAAjB,iBAAiB,CAAmB;QACtC,mBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,2BAAqB,GAArB,qBAAqB,CAAuB;;IAGtD,CAAC;IAED,uDAAqB,GAArB,UAAsB,MAAwB;QAA9C,iBAkCC;QAjCG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAE/B,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAE5C,IAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACpD,UAAU,CAAC,OAAO,CAAC,UAAC,EAAmB;gBAAjB,cAAI,EAAE,wBAAS;YACnC,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG;YAC1B,IAAI,EAAE,sDAAS,CAAC,MAAM;YACtB,UAAU,EAAE,MAAM,CAAC,UAAU;SAC9B,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;QACtD,CAAC;QAED,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;YAC7B,MAAM,EAAE,IAAI,0DAAY,CACtB,cAAc,EACd,IAAI,CAAC,aAAa,CAAC,MAAM,EACzB,OAAO,CAAC,cAAc,CAAC,CACxB;SACF,CAAC,CAAC;IAEP,CAAC;IAGD,oDAAkB,GAAlB;QAAA,iBAeC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QACzD,CAAC;QAED,kDAAK,CACH,IAAI,CAAC,WAAW,CAAC,OAAO,EACxB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CACnC;aACD,SAAS,CAAC;YACR,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;YACjC,KAAI,CAAC,qBAAqB,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;IAEL,CAAC;IAnED;QADC,qEAAe,CAAC,qEAAc,CAAC;kCACnB,uDAAS;gEAAiB;IAGvC;QADC,qEAAe,CAAC,wEAAe,CAAC;kCACnB,uDAAS;iEAAkB;IAN9B,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,SAAS,EAAE;gBACT,8EAAqB;aACtB;SACF,CAAC;yCAU4B,oEAAc;YACX,0EAAiB;YACvB,6DAAa;YACT,qEAAiB;YACb,8EAAqB;OAb3C,uBAAuB,CAwEnC;IAAD,8BAAC;CAAA,CAxE4C,gEAAW,GAwEvD;AAxEmC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BK;AACM;AAEU;AACa;AACV;AACA;AAmB5D;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAjBhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE;gBACZ,kFAAuB;gBACvB,qEAAc;gBACd,wEAAe;gBACf,wEAAa;aACd;YACD,OAAO,EAAE;gBACP,kFAAuB;gBACvB,qEAAc;gBACd,wEAAe;gBACf,wEAAa;aACd;SACF,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;ACzBwB;AAEzD;IAIE;QAFA,YAAO,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEb,CAAC;IAEjB,uCAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAEH,4BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0C;AACZ;AAG/B;IAGE;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,4CAAO,EAAE,CAAC;IACjC,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IATU,iBAAiB;QAD7B,gEAAU,EAAE;;OACA,iBAAiB,CAU7B;IAAD,wBAAC;CAAA;AAV6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACG9B;IAAA;QAKE,OAAE,GAAW,EAAE,CAAC;QAChB,SAAI,GAAW,EAAE,CAAC;QAClB,WAAM,GAAQ,EAAE,CAAC;IACnB,CAAC;IAAD,aAAC;AAAD,CAAC;;AAED;IAAmC,iCAAoB;IAAvD;;IAuBA,CAAC;IArBC,uCAAe,GAAf;QAAA,iBAmBC;QAlBC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,QAAQ;YAChD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/B,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;YACjD,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/C,IAAM,QAAQ,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC;iBAC5B,MAAM,CAAC,WAAC;gBACP,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC9D,CAAC,CAAC;iBACD,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,EAAT,CAAS,CAAC,CAAC;YACvB,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,eAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAzB,CAAyB,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,QAAQ;YACtC,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,oBAAC;AAAD,CAAC,CAvBkC,MAAM,GAuBxC;;AAED;IAAuC,qCAAqB;IAA5D;;IAQA,CAAC;IANC,2CAAe,GAAf;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC,CARsC,MAAM,GAQ5C;;AAED;IAAwC,sCAAsB;IAA9D;;IAQA,CAAC;IANC,4CAAe,GAAf;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CAAC,CARuC,MAAM,GAQ7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDsB;AACkC;AACT;AAQhD;IAYE,gCACU,aAAmC,EACnC,GAAsB,EACtB,UAA6B;QAF7B,oDAAmC;QAAnC,kBAAa,GAAb,aAAa,CAAsB;QACnC,QAAG,GAAH,GAAG,CAAmB;QACtB,eAAU,GAAV,UAAU,CAAmB;QAX7B,uBAAkB,GAAG,IAAI,0DAAY,EAAO,CAAC;IAYnD,CAAC;IAEL,yCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,iBAAO;YACrD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC/E,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;IAjCQ;QAAR,2DAAK,EAAE;;8DAAiB;IAEf;QAAT,4DAAM,EAAE;;sEAA8C;IAER;QAA9C,+DAAS,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,8DAAgB,EAAC,CAAC;kCAAY,8DAAgB;6DAAC;IANhE,sBAAsB;QAJlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,QAAQ,EAAE,qBAAqB;SAChC,CAAC;yCAcyB,4DAAa;YACvB,+DAAiB;YACV,qEAAiB;OAf5B,sBAAsB,CAoClC;IAAD,6BAAC;CAAA;AApCkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBZ;AAE2B;AAGlD;IAKE,uBAAY,QAAwB,EAAE,QAAkC;QACtE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,oCAAY,GAAZ,UAAa,SAA2B,EAAE,IAAY;QACpD,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEvD,IAAI,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,cAAc,CAAC,CAAC;QAC7E,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;IACrD,CAAC;IAfU,aAAa;QADzB,gEAAU,EAAE;yCAMW,8DAAc,EAAY,sEAAwB;OAL7D,aAAa,CAgBzB;IAAD,oBAAC;CAAA;AAhByB;;;;;;;;;;;;;;ACV1B;AAAA;IAME;QAJQ,YAAO,GAA4B,EAAE,CAAC;IAI9B,CAAC;IAEjB,yCAAgB,GAAhB,UAAiB,MAAW;QAC1B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,yCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,kCAAS,GAAT,UAAU,IAAY;QACpB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,iCAAQ,GAAR,UAAS,IAAY,EAAE,MAAW;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,sCAAa,GAAb,UAAc,IAAY;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,ypD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqE;AACb;AAChB;AAEG;AAQ3C;IAKE,sBACU,UAAsB,EACtB,MAAc;QADd,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,iCAAU,GAAV;QACE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC;IACjC,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;QAC1C,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,6DAAM,CAAC,UAAC,KAAK,IAAK,YAAK,YAAY,6DAAa,EAA9B,CAA8B,CAAC,CAClD,CAAC,SAAS,CAAC;YACV,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACL,CAAC;IA9BU,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAOsB,uDAAU;YACd,sDAAM;OAPb,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZiC;AACjB;AACyB;AACV;AACD;AAQ9B;AAEa;AACS;AAGc;AAGQ;AA0BrE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAxBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6GAA0B;gBAC1B,yHAA8B;aAC/B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,4DAAY,CAAC,OAAO,CAAC,kDAAM,CAAC;gBAC5B,gEAAgB;gBAChB,oEAAoB;aACrB;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,8DAAc,EAAE,QAAQ,EAAE,qEAAqB,EAAC;gBAC1D;oBACE,OAAO,EAAE,sEAAsB;oBAC/B,QAAQ,EAAE,uEAAuB;iBAClC;aACF;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;AC3CuC;AAGQ;AAI9D,IAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6GAA0B;KACtC;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,yHAA8B;KAC1C;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBuD;AACP;AACC;AAGnD,IAAM,IAAI,GAAG,MAAM,CAAC;AAQpB;IAyBE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAvBpC,gBAAW,GAAG,IAAI,oDAAe,CAAiB,IAAI,CAAC,CAAC;IAuBhB,CAAC;IArBzC,sBAAI,4BAAI;aAAR;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACpB,CAAC;YAED,IAAM,IAAI,GAAG,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YACpB,CAAC;YAED,MAAM,CAAC;QACT,CAAC;aAED,UAAS,IAAa;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACrD,CAAC;;;OALA;IAYD,+BAAU,GAAV,UAAW,GAAY;QAAvB,iBAYC;QAXC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAClC,KAAI,CAAC,IAAI,GAAG,EAAE,GAAG,OAAE,MAAM,UAAE,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,iCAAY,GAAZ;QACE,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IA9CU,UAAU;QADtB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;yCA0BP,+DAAU;OAzBzB,UAAU,CAkDtB;IAAD,iBAAC;CAAA;AAlDsB;;;;;;;;;;;;;ACXvB;AAAA,IAAM,cAAc,GAAG;IACrB,OAAO,EAAE;QACP;YACE,OAAO,EAAE,UAAC,KAAK,EAAE,YAA0B;gBACzC,IAAM,MAAM,GAAkB,YAAY,CAAC,QAAQ,EAAE,CAAC;gBAEtD;;mBAEG;gBACH,IAAM,MAAM,GAAiB,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;gBAEnE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAE3C,IAAM,MAAM,GAAiB,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;gBACnE,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBAE3C;;mBAEG;gBACH,GAAG,CAAC,CAAyB,UAAyC,EAAzC,WAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,UAAU,EAAzC,cAAyC,EAAzC,IAAyC;oBAAjE,IAAM,cAAc;oBACvB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,cAAc,EAAE,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;iBAC1F;YACH,CAAC;SACF;QACD;YACE,OAAO,EAAE,UAAC,KAAK,EAAE,YAA0B;gBACzC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;YACvE,CAAC;SACF;KACF;CACF,CAAC;AAEF,+DAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC9B,+KAA+K,8LAA8L,cAAc,2hBAA2hB,eAAe,sFAAsF,cAAc,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKl/B;AAC4C;AAGnB;AACD;AACF;AACoB;AACF;AACC;AAEb;AAOnD;IAiBE,oCACE,QAAwB,EAChB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAlBhC,WAAM,GAAQ,EAAC,UAAU,EAAE,EAAE,EAAC,CAAC;QAC/B,UAAK,GAAQ,EAAE,CAAC;QAEhB,oBAAe,GAAqC,EAAE,CAAC;QACvD,YAAO,GAAG,EAAE,CAAC;QACb,kBAAa,GAAkC,EAAE,CAAC;QAKlD,YAAO,GAAG;YACR,EAAC,KAAK,EAAE,oBAAoB,EAAE,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAC;YAC5E,EAAC,KAAK,EAAE,4BAA4B,EAAE,KAAK,EAAE,IAAI,CAAC,wBAAwB,EAAE,QAAQ,EAAE,KAAK,EAAC;YAC5F,EAAC,KAAK,EAAE,wBAAwB,EAAE,KAAK,EAAE,IAAI,CAAC,uBAAuB,EAAE,QAAQ,EAAE,KAAK,EAAC;SACxF,CAAC;IAQF,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAUC;QARC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW;aACpC,SAAS,CAAC,UAAC,IAAoB;YAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC1B,MAAM,CAAC;YACT,CAAC;YACD,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,8CAAS,GAAT,UAAU,MAAM;QACd,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAED,wDAAmB,GAAnB;QACE,GAAG,CAAC,CAAiB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA5B,IAAM,MAAM;YACf,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,CAAC;SACF;IACH,CAAC;IAED,iDAAY,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,GAAG,CAAC,CAAiB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA5B,IAAM,MAAM;YACf,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,CAAC;SACF;IACH,CAAC;IAED,sDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,GAAG,+CAAa,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,8CAAW,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI;YACtD,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,IAAM,GAAG,GAAG,IAAI,IAAI,CAClB,GAAG,CAAC,WAAW,EAAE,GAAG,GAAG,EACvB,GAAG,CAAC,QAAQ,EAAE,EACd,GAAG,CAAC,MAAM,EAAE,CACb,CAAC,OAAO,EAAE,CAAC;gBACZ,IAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;gBACjC,IAAM,IAAI,GAAG,IAAI,IAAI,CACnB,OAAO,CAAC,CAAC,CAAC,EACV,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EACd,OAAO,CAAC,CAAC,CAAC,CACX,CAAC,OAAO,EAAE,CAAC;gBAEZ,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC7B,MAAM,GAAG;wBACP;4BACE,MAAM,EAAE;gCACN,aAAa,EAAE,yBAAyB;gCACxC,WAAW,EAAE,KAAK;6BACnB;yBACF;qBACF,CAAC;gBACJ,CAAC;YACH,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,GAAG,UAAC,KAAK,EAAE,QAAQ,EAAE,IAAI;YACzD,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxB,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;gBAE3C,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,IAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACrC,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;oBAEhD,IAAI,CAAC;wBACH,IAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;wBAEzC,EAAE,CAAC,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC;4BAC3B,MAAM,CAAC,IAAI,CAAC;wBACd,CAAC;wBAED,MAAM,CAAC;4BACL;gCACE,SAAS,EAAE;oCACT,MAAM,EAAE;wCACN,aAAa,EAAE,OAAO,GAAG,SAAS;wCAClC,WAAW,EAAE,UAAU;qCACxB;iCACF;6BACF;yBACF,CAAC;oBACJ,CAAC;oBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACb,CAAC;gBACH,CAAC;gBAED,MAAM,CAAC;oBACL;wBACE,SAAS,EAAE;4BACT,MAAM,EAAE;gCACN,cAAc,EAAE,MAAM;gCACtB,WAAW,EAAE,MAAM,CAAC,KAAK;6BAC1B;yBACF;qBACF;iBACF,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,UAAC,QAAQ,EAAE,OAAO;YACxC,QAAQ,CAAC,qBAAqB,CAAC,eAAK;gBAClC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,UAAC,IAAI,EAAE,OAAO;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,UAAC,IAAI,EAAE,OAAO;YACpC,IAAI,CAAC,KAAK,EAAE,CAAC;QACf,CAAC,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAGvD,CAAC;IAED,4DAAuB,GAAvB;QACE,IAAI,CAAC,MAAM,GAAG,8CAAa,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,6DAAwB,GAAxB;QACE,IAAI,CAAC,MAAM,GAAG,wDAAqB,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,uDAAoB,CAAC;QAClC,IAAI,CAAC,aAAa,GAAG,gEAAuB,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAED,+CAAU,GAAV;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,cAAI;YAC1C,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IA1LU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;YAElC,aAAa,EAAE,+DAAiB,CAAC,IAAI;SACtC,CAAC;yCAmBY,8DAAc;YACJ,uDAAU;OAnBrB,0BAA0B,CA4LtC;IAAD,iCAAC;CAAA;AA5LsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBvC,4CAA4C,iBAAiB,2BAA2B,4BAA4B,mBAAmB,cAAc,oBAAoB,4BAA4B,mBAAmB,8BAA8B,2BAA2B,uBAAuB,GAAG,G;;;;;;;;;;;ACA3S,yjBAAyjB,8BAA8B,6UAA6U,8BAA8B,0sBAA0sB,wBAAwB,kbAAkb,gBAAgB,6KAA6K,6CAA6C,EAAE,gBAAgB,mBAAmB,EAAE,4nCAA4nC,qCAAqC,wOAAwO,cAAc,qcAAqc,cAAc,28CAA28C,0BAA0B,oNAAoN,mBAAmB,qhDAAqhD,sDAAsD,UAAU,+CAA+C,0CAA0C,qLAAqL,8BAA8B,MAAM,sCAAsC,aAAa,cAAc,kLAAkL,8BAA8B,MAAM,qCAAqC,aAAa,cAAc,mEAAmE,0CAA0C,4BAA4B,sBAAsB,yBAAyB,OAAO,YAAY,sBAAsB,yBAAyB,OAAO,YAAY,sBAAsB,6BAA6B,WAAW,YAAY,kBAAkB,aAAa,cAAc,aAAa,cAAc,yHAAyH,wBAAwB,yFAAyF,mCAAmC,aAAa,cAAc,+KAA+K,gBAAgB,MAAM,IAAI,aAAa,cAAc,oGAAoG,6CAA6C,EAAE,gBAAgB,mBAAmB,EAAE,MAAM,0CAA0C,aAAa,cAAc,4DAA4D,sCAAsC,6CAA6C,sBAAsB,4DAA4D,aAAa,cAAc,kBAAkB,aAAa,kBAAkB,2DAA2D,WAAW,cAAc,kBAAkB,uDAAuD,SAAS,cAAc,cAAc,aAAa,UAAU,aAAa,YAAY,4CAA4C,qCAAqC,uDAAuD,IAAI,aAAa,cAAc,gEAAgE,kBAAkB,+IAA+I,qCAAqC,MAAM,IAAI,aAAa,kBAAkB,+IAA+I,cAAc,MAAM,IAAI,aAAa,cAAc,aAAa,UAAU,aAAa,UAAU,iDAAiD,6CAA6C,0LAA0L,cAAc,MAAM,IAAI,aAAa,cAAc,gJAAgJ,IAAI,aAAa,gBAAgB,0EAA0E,kBAAkB,6BAA6B,0BAA0B,YAAY,kBAAkB,4BAA4B,8BAA8B,YAAY,kBAAkB,0BAA0B,QAAQ,YAAY,cAAc,aAAa,gBAAgB,wFAAwF,kBAAkB,4BAA4B,sBAAsB,4BAA4B,UAAU,YAAY,sBAAsB,8BAA8B,aAAa,YAAY,sBAAsB,+BAA+B,aAAa,YAAY,sBAAsB,8BAA8B,YAAY,YAAY,kBAAkB,aAAa,cAAc,aAAa,UAAU,aAAa,YAAY,8CAA8C,yCAAyC,0JAA0J,0BAA0B,MAAM,IAAI,aAAa,gBAAgB,6HAA6H,mBAAmB,oDAAoD,kBAAkB,2BAA2B,SAAS,YAAY,kBAAkB,yBAAyB,OAAO,YAAY,kBAAkB,2BAA2B,SAAS,YAAY,cAAc,aAAa,YAAY,aAAa,YAAY,6CAA6C,sCAAsC,mIAAmI,IAAI,aAAa,cAAc,gLAAgL,IAAI,aAAa,UAAU,aAAa,YAAY,kDAAkD,6CAA6C,8EAA8E,IAAI,aAAa,cAAc,2EAA2E,IAAI,aAAa,UAAU,aAAa,YAAY,8CAA8C,gBAAgB,cAAc,MAAM,YAAY,mHAAmH,cAAc,6C;;;;;;;;;;;;;;;;;;;;;;;;ACAvkb;AAOlD;IAIE;QAFA,UAAK,GAAQ,EAAE,CAAC;IAEA,CAAC;IAEjB,gDAAO,GAAP,UAAQ,OAAe;QACrB,KAAK,CAAC,OAAO,CAAC,CAAC;IACjB,CAAC;IAED,iDAAQ,GAAR;IACA,CAAC;IAXU,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;;;SAGxC,CAAC;;OACW,8BAA8B,CAa1C;IAAD,qCAAC;CAAA;AAb0C;;;;;;;;;;;;;;ACP3C;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'sf-default-field',\n  template: `<p>Unknow type</p>`\n})\nexport class DefaultWidget {}\n","import { Component } from '@angular/core';\n\nimport { ArrayLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-array-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let itemProperty of formProperty.properties; let i=index; trackBy:trackByIndex\">\n\t\t<sf-form-element [formProperty]=\"itemProperty\"></sf-form-element>\n\t\t<button (click)=\"removeItem(i)\" class=\"btn btn-default array-remove-button\">\n\t\t\t<span class=\"glyphicon glyphicon-minus\" aria-hidden=\"true\"></span> Remove\n\t\t</button>\n\t</div>\n\t<button (click)=\"addItem()\" class=\"btn btn-default array-add-button\">\n\t\t<span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> Add\n\t</button>\n</div>`\n})\nexport class ArrayWidget extends ArrayLayoutWidget {\n\n  addItem() {\n    this.formProperty.addItem();\n  }\n\n  removeItem(index: number) {\n    this.formProperty.removeItem(index);\n  }\n\n  trackByIndex(index: number, item: any) {\n    return index;\n  }\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'sf-button-widget',\n  template: '<button (click)=\"button.action($event)\">{{button.label}}</button>'\n})\nexport class ButtonWidget {\n  public button\n  public formProperty\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-checkbox-widget',\n  template: `<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n        {{ schema.title }}\n    </label>\n\t<div *ngIf=\"schema.type!='array'\" class=\"checkbox\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" [indeterminate]=\"control.value !== false && control.value !== true ? true :null\" type=\"checkbox\" [attr.disabled]=\"schema.readOnly\">\n\t\t\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n\t\t\t{{schema.description}}\n\t\t</label>\n\t</div>\n\t<ng-container *ngIf=\"schema.type==='array'\">\n\t\t<div *ngFor=\"let option of schema.items.oneOf\" class=\"checkbox\">\n\t\t\t<label class=\"horizontal control-label\">\n\t\t\t\t<input [attr.name]=\"name\"\n\t\t\t\t\tvalue=\"{{option.enum[0]}}\" type=\"checkbox\" \n\t\t\t\t\t[attr.disabled]=\"schema.readOnly\"\n\t\t\t\t\t(change)=\"onCheck($event.target)\"\n\t\t\t\t\t[attr.checked]=\"checked[option.enum[0]] ? true : null\">\n\t\t\t\t{{option.description}}\n\t\t\t</label>\n\t\t</div>\n\t</ng-container>\n</div>`\n})\nexport class CheckboxWidget extends ControlWidget implements AfterViewInit {\n\n\tchecked: any = {};\n\n\tngAfterViewInit() {\n\t\tconst control = this.control;\n\t\tthis.formProperty.valueChanges.subscribe((newValue) => {\n\t\t\tif (control.value !== newValue) {\n\t\t\t\tcontrol.setValue(newValue, { emitEvent: false });\n\t\t\t\tif (newValue && Array.isArray(newValue)) {\n\t\t\t\t\tnewValue.map(v => this.checked[v] = true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.formProperty.errorsChanges.subscribe((errors) => {\n\t\t\tcontrol.setErrors(errors, { emitEvent: true });\n\t\t});\n\t\tcontrol.valueChanges.subscribe((newValue) => {\n\t\t\tthis.formProperty.setValue(newValue, false);\n\t\t});\n\t}\n\n\tonCheck(el) {\n\t\tif (el.checked) {\n\t\t\tthis.checked[el.value] = true;\n\t\t} else {\n\t\t\tdelete this.checked[el.value];\n\t\t}\n\t\tthis.formProperty.setValue(Object.keys(this.checked), false);\n\t}\n}\n","import { ArrayWidget } from './array/array.widget';\nimport { ButtonWidget } from './button/button.widget';\nimport { CheckboxWidget } from './checkbox/checkbox.widget';\nimport { FileWidget } from './file/file.widget';\nimport { IntegerWidget } from './integer/integer.widget';\nimport { ObjectWidget } from './object/object.widget';\nimport { RadioWidget } from './radio/radio.widget';\nimport { RangeWidget } from './range/range.widget';\nimport { SelectWidget } from './select/select.widget';\nimport { StringWidget } from './string/string.widget';\nimport { TextAreaWidget } from './textarea/textarea.widget';\n\nimport { WidgetRegistry } from '../widgetregistry';\n\nexport class DefaultWidgetRegistry extends WidgetRegistry {\n  constructor() {\n    super();\n\n    this.register('array',  ArrayWidget);\n    this.register('object',  ObjectWidget);\n\n    this.register('string', StringWidget);\n    this.register('search', StringWidget);\n    this.register('tel', StringWidget);\n    this.register('url', StringWidget);\n    this.register('email', StringWidget);\n    this.register('password', StringWidget);\n    this.register('color', StringWidget);\n    this.register('date', StringWidget);\n    this.register('date-time', StringWidget);\n    this.register('time', StringWidget);\n\n    this.register('integer', IntegerWidget);\n    this.register('number', IntegerWidget);\n    this.register('range', RangeWidget);\n\n    this.register('textarea', TextAreaWidget);\n\n    this.register('file', FileWidget);\n    this.register('select', SelectWidget);\n    this.register('radio', RadioWidget);\n    this.register('boolean', CheckboxWidget);\n    this.register('checkbox', CheckboxWidget);\n\n    this.register('button', ButtonWidget);\n\n    this.setDefaultWidget(StringWidget);\n  }\n}\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-file-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n  <input [name]=\"name\" class=\"text-widget file-widget\" [attr.id]=\"id\"\n    [formControl]=\"control\" type=\"file\" [attr.disabled]=\"schema.readOnly?true:null\"\n    (change)=\"onFileChange($event)\">\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class FileWidget extends ControlWidget implements AfterViewInit {\n\n  protected reader = new FileReader();\n  protected filedata: any = {};\n\n  constructor() {\n    super();\n  }\n\n  ngAfterViewInit() {\n    // OVERRIDE ControlWidget ngAfterViewInit() as ReactiveForms do not handle\n    // file inputs\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n    });\n\n    this.reader.onloadend = () => {\n      this.filedata.data = btoa(this.reader.result);\n      this.formProperty.setValue(this.filedata, false);\n    };\n  }\n\n  onFileChange($event) {\n    const file = $event.target.files[0];\n    this.filedata.filename = file.name;\n    this.filedata.size = file.size;\n    this.filedata['content-type'] = file.type;\n    this.filedata.encoding = 'base64';\n    this.reader.readAsBinaryString(file);\n  }\n}\n","export { ArrayWidget } from './array/array.widget';\nexport { CheckboxWidget } from './checkbox/checkbox.widget';\nexport { FileWidget } from './file/file.widget';\nexport { IntegerWidget } from './integer/integer.widget';\nexport { ObjectWidget } from './object/object.widget';\nexport { RadioWidget } from './radio/radio.widget';\nexport { RangeWidget } from './range/range.widget';\nexport { SelectWidget } from './select/select.widget';\nexport { StringWidget } from './string/string.widget';\nexport { TextAreaWidget } from './textarea/textarea.widget';\nexport { ButtonWidget } from './button/button.widget';\nexport { DefaultWidgetRegistry } from './defaultwidgetregistry';\n","import {\n  Component,\n} from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-integer-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n  <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<input [attr.readonly]=\"schema.readOnly?true:null\" [name]=\"name\"\n\tclass=\"text-widget integer-widget form-control\" [formControl]=\"control\"\n\t[attr.type]=\"'number'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\"\n\t[attr.placeholder]=\"schema.placeholder\"\n\t[attr.maxLength]=\"schema.maxLength || null\"\n  [attr.minLength]=\"schema.minLength || null\">\n</div>`\n})\nexport class IntegerWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ObjectLayoutWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-form-object',\n  template: `<fieldset *ngFor=\"let fieldset of formProperty.schema.fieldsets\">\n\t<legend *ngIf=\"fieldset.title\">{{fieldset.title}}</legend>\n\t<div *ngIf=\"fieldset.description\">{{fieldset.description}}</div>\n\t<div *ngFor=\"let fieldId of fieldset.fields\">\n\t\t<sf-form-element [formProperty]=\"formProperty.getProperty(fieldId)\"></sf-form-element>\n\t</div>\n</fieldset>`\n})\nexport class ObjectWidget extends ObjectLayoutWidget { }\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-radio-widget',\n  template: `<div class=\"widget form-group\">\n\t<label>{{schema.title}}</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<div *ngFor=\"let option of schema.oneOf\" class=\"radio\">\n\t\t<label class=\"horizontal control-label\">\n\t\t\t<input [formControl]=\"control\" [attr.name]=\"name\" value=\"{{option.enum[0]}}\" type=\"radio\"  [attr.disabled]=\"schema.readOnly\">\n\t\t\t{{option.description}}\n\t\t</label>\n\t</div>\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class RadioWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-range-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\t\n\t<input [name]=\"name\" class=\"text-widget range-widget\" [attr.id]=\"id\"\n\t[formControl]=\"control\" [attr.type]=\"'range'\" [attr.min]=\"schema.minimum\" [attr.max]=\"schema.maximum\" [attr.disabled]=\"schema.readOnly?true:null\" >\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\">\n</div>`\n})\nexport class RangeWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n\tselector: 'sf-select-widget',\n\ttemplate: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n\n\t<span *ngIf=\"schema.description\" class=\"formHelp\">\n\t\t{{schema.description}}\n\t</span>\n\n\t<select *ngIf=\"schema.type!='array'\" [formControl]=\"control\" [attr.name]=\"name\" [attr.disabled]=\"schema.readOnly\" class=\"form-control\">\n\t\t<option *ngFor=\"let option of schema.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\n\t</select>\n\n\t<select *ngIf=\"schema.type==='array'\" multiple [formControl]=\"control\" [attr.name]=\"name\" [attr.disabled]=\"schema.readOnly\" class=\"form-control\">\n\t\t<option *ngFor=\"let option of schema.items.oneOf\" [ngValue]=\"option.enum[0]\" >{{option.description}}</option>\n\t</select>\n\n\t<input *ngIf=\"schema.readOnly\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>`\n})\nexport class SelectWidget extends ControlWidget {}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-string-widget',\n  template: `<input *ngIf=\"this.getInputType()==='hidden'; else notHiddenFieldBlock\"\n  [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n<ng-template #notHiddenFieldBlock>\n<div class=\"widget form-group\">\n    <label [attr.for]=\"id\" class=\"horizontal control-label\">\n    \t{{ schema.title }}\n    </label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n    <input [name]=\"name\" [attr.readonly]=\"(schema.widget.id!=='color') && schema.readOnly?true:null\"\n    class=\"text-widget.id textline-widget form-control\" [attr.type]=\"this.getInputType()\"\n    [attr.id]=\"id\"  [formControl]=\"control\" [attr.placeholder]=\"schema.placeholder\"\n    [attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n    [attr.disabled]=\"(schema.widget.id=='color' && schema.readOnly)?true:null\">\n    <input *ngIf=\"(schema.widget.id==='color' && schema.readOnly)\" [attr.name]=\"name\" type=\"hidden\" [formControl]=\"control\">\n</div>\n</ng-template>`\n})\nexport class StringWidget extends ControlWidget {\n\n    getInputType() {\n        if (!this.schema.widget.id || this.schema.widget.id === 'string') {\n            return 'text';\n        } else {\n            return this.schema.widget.id;\n        }\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ControlWidget } from '../../widget';\n\n@Component({\n  selector: 'sf-textarea-widget',\n  template: `<div class=\"widget form-group\">\n\t<label [attr.for]=\"id\" class=\"horizontal control-label\">\n\t\t{{ schema.title }}\n\t</label>\n    <span *ngIf=\"schema.description\" class=\"formHelp\">{{schema.description}}</span>\n\t<textarea [attr.readonly]=\"schema.readOnly\" [name]=\"name\"\n\t\tclass=\"text-widget textarea-widget form-control\"\n\t\t[attr.placeholder]=\"schema.placeholder\"\n\t\t[attr.maxLength]=\"schema.maxLength || null\"\n    [attr.minLength]=\"schema.minLength || null\"\n\t\t[formControl]=\"control\"></textarea>\n</div>`\n})\nexport class TextAreaWidget extends ControlWidget {}\n","import {\n  ChangeDetectorRef,\n  Component,\n  OnChanges,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport {Action} from './model/action';\nimport {ActionRegistry} from './model/actionregistry';\nimport {FormProperty} from './model/formproperty';\nimport {FormPropertyFactory} from './model/formpropertyfactory';\nimport {SchemaPreprocessor} from './model/schemapreprocessor';\nimport {ValidatorRegistry} from './model/validatorregistry';\nimport {Validator} from './model/validator';\nimport {Binding} from './model/binding';\nimport {BindingRegistry} from './model/bindingregistry';\n\nimport {SchemaValidatorFactory} from './schemavalidatorfactory';\nimport {WidgetFactory} from './widgetfactory';\nimport {TerminatorService} from './terminator.service';\n\nexport function useFactory(schemaValidatorFactory, validatorRegistry) {\n  return new FormPropertyFactory(schemaValidatorFactory, validatorRegistry);\n}\n\n@Component({\n  selector: 'sf-form',\n  template: `\n    <form>\n      <sf-form-element\n        *ngIf=\"rootProperty\" [formProperty]=\"rootProperty\"></sf-form-element>\n    </form>`,\n  providers: [\n    ActionRegistry,\n    ValidatorRegistry,\n    BindingRegistry,\n    SchemaPreprocessor,\n    WidgetFactory,\n    {\n      provide: FormPropertyFactory,\n      useFactory: useFactory,\n      deps: [SchemaValidatorFactory, ValidatorRegistry]\n    },\n    TerminatorService,\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FormComponent,\n      multi: true\n    }\n  ]\n})\nexport class FormComponent implements OnChanges, ControlValueAccessor {\n\n  @Input() schema: any = null;\n\n  @Input() model: any;\n\n  @Input() actions: { [actionId: string]: Action } = {};\n\n  @Input() validators: { [path: string]: Validator } = {};\n\n  @Input() bindings: { [path: string]: Binding } = {};\n\n  @Output() onChange = new EventEmitter<{ value: any }>();\n\n  @Output() modelChange = new EventEmitter<any>();\n\n  @Output() isValid = new EventEmitter<boolean>();\n\n  @Output() onErrorChange = new EventEmitter<{ value: any[] }>();\n\n  @Output() onErrorsChange = new EventEmitter<{value: any}>();\n\n  rootProperty: FormProperty = null;\n\n  private onChangeCallback: any;\n\n  constructor(\n    private formPropertyFactory: FormPropertyFactory,\n    private actionRegistry: ActionRegistry,\n    private validatorRegistry: ValidatorRegistry,\n    private bindingRegistry: BindingRegistry,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService\n  ) { }\n\n  writeValue(obj: any) {\n    if (this.rootProperty) {\n      this.rootProperty.reset(obj, false);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n    if (this.rootProperty) {\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n    }\n  }\n\n  // TODO implement\n  registerOnTouched(fn: any) {\n  }\n\n  // TODO implement\n  // setDisabledState(isDisabled: boolean)?: void\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.validators) {\n      this.setValidators();\n    }\n\n    if (changes.actions) {\n      this.setActions();\n    }\n\n    if (changes.bindings) {\n      this.setBindings();\n    }\n\n    if (this.schema && !this.schema.type) {\n      this.schema.type = 'object';\n    }\n\n    if (this.schema && changes.schema) {\n      if (!changes.schema.firstChange) {\n        this.terminator.destroy();\n      }\n\n      SchemaPreprocessor.preprocess(this.schema);\n      this.rootProperty = this.formPropertyFactory.createProperty(this.schema);\n      if (this.model) {\n        // this.rootProperty.reset(this.model, false);\n      }\n\n      this.rootProperty.valueChanges.subscribe(\n        this.onValueChanges.bind(this)\n      );\n\n      this.rootProperty.errorsChanges.subscribe(value => {\n        this.onErrorChange.emit({value: value});\n        this.isValid.emit(!(value && value.length));\n      });\n\n    }\n\n    if (this.schema && (changes.model || changes.schema )) {\n      this.rootProperty.reset(this.model, false);\n      this.cdr.detectChanges();\n    }\n\n  }\n\n  private setValidators() {\n    this.validatorRegistry.clear();\n    if (this.validators) {\n      for (const validatorId in this.validators) {\n        if (this.validators.hasOwnProperty(validatorId)) {\n          this.validatorRegistry.register(validatorId, this.validators[validatorId]);\n        }\n      }\n    }\n  }\n\n  private setActions() {\n    this.actionRegistry.clear();\n    if (this.actions) {\n      for (const actionId in this.actions) {\n        if (this.actions.hasOwnProperty(actionId)) {\n          this.actionRegistry.register(actionId, this.actions[actionId]);\n        }\n      }\n    }\n  }\n\n  private setBindings() {\n    this.bindingRegistry.clear();\n    if (this.bindings) {\n      for (const bindingPath in this.bindings) {\n        if (this.bindings.hasOwnProperty(bindingPath)) {\n          this.bindingRegistry.register(bindingPath, this.bindings[bindingPath]);\n        }\n      }\n    }\n  }\n\n  public reset() {\n    this.rootProperty.reset(null, true);\n  }\n\n  private setModel(value: any) {\n    if (this.model) {\n      Object.assign(this.model, value);\n    } else {\n      this.model = value;\n    }\n  }\n\n  private onValueChanges(value) {\n    if (this.onChangeCallback) {\n      this.setModel(value);\n      this.onChangeCallback(value);\n    }\n\n    // two way binding is used\n    if (this.modelChange.observers.length > 0) {\n      if (!this.onChangeCallback) {\n        this.setModel(value);\n      }\n      this.modelChange.emit(value);\n    }\n    this.onChange.emit({value: value});\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  Input,\n  OnChanges,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from \"@angular/core\";\nimport {Subscription} from 'rxjs';\nimport {WidgetFactory} from \"./widgetfactory\";\nimport {TerminatorService} from \"./terminator.service\";\n\n@Component({\n  selector: 'sf-form-element-action',\n  template: '<ng-template #target></ng-template>'\n})\nexport class FormElementComponentAction implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  button: any;\n\n  @Input()\n  formProperty: any;\n\n  @ViewChild('target', {read: ViewContainerRef}) container: ViewContainerRef;\n\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(private widgetFactory: WidgetFactory = null,\n              private terminator: TerminatorService) {\n  }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.button.widget || 'button');\n    this.ref.instance.button = this.button;\n    this.ref.instance.formProperty = this.formProperty;\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef,\n  Input, OnDestroy,\n  OnInit, Renderer2\n} from '@angular/core';\n\nimport {\n  FormControl\n} from '@angular/forms';\n\nimport {Widget} from './widget';\n\nimport {ActionRegistry} from './model/actionregistry';\nimport {FormProperty} from './model/formproperty';\nimport {BindingRegistry} from './model/bindingregistry';\nimport {Binding} from './model/binding';\nimport {Function} from 'estree';\n\n@Component({\n  selector: 'sf-form-element',\n  template: `\n    <div *ngIf=\"formProperty.visible\"\n         [class.has-error]=\"!control.valid\"\n         [class.has-success]=\"control.valid\">\n      <sf-widget-chooser\n        (widgetInstanciated)=\"onWidgetInstanciated($event)\"\n        [widgetInfo]=\"formProperty.schema.widget\">\n      </sf-widget-chooser>\n      <sf-form-element-action *ngFor=\"let button of buttons\" [button]=\"button\" [formProperty]=\"formProperty\"></sf-form-element-action>\n    </div>`\n})\nexport class FormElementComponent implements OnInit, OnDestroy {\n\n  private static counter = 0;\n\n  @Input() formProperty: FormProperty;\n  control: FormControl = new FormControl('', () => null);\n\n  widget: Widget<any> = null;\n\n  buttons = [];\n\n  unlisten = [];\n\n  constructor(private actionRegistry: ActionRegistry,\n              private bindingRegistry: BindingRegistry,\n              private renderer: Renderer2,\n              private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.parseButtons();\n    this.setupBindings();\n  }\n\n  private setupBindings() {\n    const bindings: Binding[] = this.bindingRegistry.get(this.formProperty.path);\n    if ((bindings || []).length) {\n      bindings.forEach((binding) => {\n        for (const eventId in binding) {\n          this.createBinding(eventId, binding[eventId]);\n        }\n      });\n    }\n  }\n\n  private createBinding(eventId, listener) {\n    this.unlisten.push(this.renderer.listen(this.elementRef.nativeElement,\n      eventId,\n      (event) => {\n        if (listener instanceof Function) {\n          listener(event, this.formProperty);\n        } else {\n          console.warn('Calling non function handler for eventId ' + eventId + ' for path ' + this.formProperty.path);\n        }\n      }));\n  }\n\n  private parseButtons() {\n    if (this.formProperty.schema.buttons !== undefined) {\n      this.buttons = this.formProperty.schema.buttons;\n\n      for (let button of this.buttons) {\n        this.createButtonCallback(button);\n      }\n    }\n  }\n\n  private createButtonCallback(button) {\n    button.action = (e) => {\n      let action;\n      if (button.id && (action = this.actionRegistry.get(button.id))) {\n        if (action) {\n          action(this.formProperty, button.parameters);\n        }\n      }\n      e.preventDefault();\n    };\n  }\n\n  onWidgetInstanciated(widget: Widget<any>) {\n    this.widget = widget;\n    let id = 'field' + (FormElementComponent.counter++);\n\n    this.widget.formProperty = this.formProperty;\n    this.widget.schema = this.formProperty.schema;\n    this.widget.name = id;\n    this.widget.id = id;\n    this.widget.control = this.control;\n  }\n\n  ngOnDestroy(): void {\n    if (this.unlisten) {\n      this.unlisten.forEach((item) => {\n        item();\n      });\n    }\n  }\n\n}\n","export { FormComponent } from './form.component';\nexport { FormElementComponent } from './formelement.component';\nexport { FormElementComponentAction } from './formelement.action.component';\nexport { WidgetChooserComponent } from './widgetchooser.component';\nexport { WidgetRegistry } from './widgetregistry';\nexport { Validator } from './model/validator';\nexport { ValidatorRegistry } from './model/validatorregistry';\nexport { Action } from './model/action';\nexport { ActionRegistry } from './model/actionregistry';\nexport { Binding } from './model/binding';\nexport { BindingRegistry } from './model/bindingregistry';\nexport { SchemaValidatorFactory, ZSchemaValidatorFactory } from './schemavalidatorfactory';\nexport {\n    Widget,\n    ControlWidget,\n    ArrayLayoutWidget,\n    ObjectLayoutWidget,\n} from './widget';\nexport {\n    ArrayWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    ObjectWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n    TextAreaWidget,\n    ButtonWidget,\n    DefaultWidgetRegistry\n} from './defaultwidgets';\nexport { SchemaFormModule } from './schema-form.module';\nexport { TemplateSchemaModule } from './template-schema/template-schema.module';\n","import { Action } from './action';\n\nexport class ActionRegistry {\n  actions: {[key: string]: Action} = {};\n\n  clear() {\n    this.actions = {};\n  }\n\n  register(actionId: string, action: Action) {\n    this.actions[actionId] = action;\n  }\n\n  get(actionId: string) {\n    return this.actions[actionId];\n  }\n}\n","import {FormProperty, PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class ArrayProperty extends PropertyGroup {\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    super(schemaValidatorFactory, validatorRegistry, schema, parent, path);\n  }\n\n  addItem(value: any = null): FormProperty {\n    let newProperty = this.addProperty();\n    newProperty.reset(value, false);\n    return newProperty;\n  }\n\n  private addProperty() {\n    let newProperty = this.formPropertyFactory.createProperty(this.schema.items, this);\n    (<FormProperty[]>this.properties).push(newProperty);\n    return newProperty;\n  }\n\n  removeItem(index: number) {\n    (<FormProperty[]>this.properties).splice(index, 1);\n    this.updateValueAndValidity(false, true);\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    this.createProperties();\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  public _hasValue(): boolean {\n    return true;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  private reduceValue(): void {\n    const value = [];\n    this.forEachChild((property, _) => {\n      if (property.visible && property._hasValue()) {\n        value.push(property.value);\n      }\n    });\n    this._value = value;\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || [];\n    this.properties = [];\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  private createProperties() {\n    this.properties = [];\n  }\n\n\n  private resetProperties(value: any) {\n    for (let idx in value) {\n      if (value.hasOwnProperty(idx)) {\n        let property = this.addProperty();\n        property.reset(value[idx], true);\n      }\n    }\n  }\n}\n","import {FormProperty} from './formproperty';\n\nexport abstract class AtomicProperty extends FormProperty {\n\n  setValue(value, onlySelf = false) {\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any = null, onlySelf = true) {\n    this.resetValue(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetValue(value: any): any {\n    if (value === null) {\n      if (this.schema.default !== undefined) {\n        value = this.schema.default;\n      } else {\n        value = this.fallbackValue();\n      }\n    }\n    this._value = value;\n  }\n\n  public _hasValue(): boolean {\n    return this.fallbackValue() !== this.value;\n  }\n\n  abstract fallbackValue(): any;\n\n  public _updateValue() {\n  }\n}\n","import {Binding} from './binding';\n\nexport class BindingRegistry {\n  bindings: Binding[] = [];\n\n  clear() {\n    this.bindings = [];\n  }\n\n  register(path: string, binding: Binding | Binding[]) {\n    this.bindings[path] = [].concat(binding);\n  }\n\n  get(path: string): Binding[] {\n    return this.bindings[path];\n  }\n}\n","import { AtomicProperty } from './atomicproperty';\n\nexport class BooleanProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n}\n","import {Observable, BehaviorSubject, combineLatest} from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport abstract class FormProperty {\n  public schemaValidator: Function;\n\n  _value: any = null;\n  _errors: any = null;\n  private _valueChanges = new BehaviorSubject<any>(null);\n  private _errorsChanges = new BehaviorSubject<any>(null);\n  private _visible = true;\n  private _visibilityChanges = new BehaviorSubject<boolean>(true);\n  private _root: PropertyGroup;\n  private _parent: PropertyGroup;\n  private _path: string;\n\n  constructor(schemaValidatorFactory: SchemaValidatorFactory,\n              private validatorRegistry: ValidatorRegistry,\n              public schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    this.schemaValidator = schemaValidatorFactory.createValidatorFn(this.schema);\n\n    this._parent = parent;\n    if (parent) {\n      this._root = parent.root;\n    } else if (this instanceof PropertyGroup) {\n      this._root = <PropertyGroup><any>this;\n    }\n    this._path = path;\n  }\n\n  public get valueChanges() {\n    return this._valueChanges;\n  }\n\n  public get errorsChanges() {\n    return this._errorsChanges;\n  }\n\n  public get type(): string {\n    return this.schema.type;\n  }\n\n  public get parent(): PropertyGroup {\n    return this._parent;\n  }\n\n  public get root(): PropertyGroup {\n    return this._root || <PropertyGroup><any>this;\n  }\n\n  public get path(): string {\n    return this._path;\n  }\n\n  public get value() {\n    return this._value;\n  }\n\n  public get visible() {\n    return this._visible;\n  }\n\n  public get valid() {\n    return this._errors === null;\n  }\n\n  public abstract setValue(value: any, onlySelf: boolean);\n\n  public abstract reset(value: any, onlySelf: boolean);\n\n  public updateValueAndValidity(onlySelf = false, emitEvent = true) {\n    this._updateValue();\n\n    if (emitEvent) {\n      this.valueChanges.next(this.value);\n    }\n\n    this._runValidation();\n\n    if (this.parent && !onlySelf) {\n      this.parent.updateValueAndValidity(onlySelf, emitEvent);\n    }\n\n  }\n\n  /**\n   * @internal\n   */\n  public abstract _hasValue(): boolean;\n\n  /**\n   *  @internal\n   */\n  public abstract _updateValue();\n\n  /**\n   * @internal\n   */\n  public _runValidation(): any {\n    let errors = this.schemaValidator(this._value) || [];\n    let customValidator = this.validatorRegistry.get(this.path);\n    if (customValidator) {\n      let customErrors = customValidator(this.value, this, this.findRoot());\n      errors = this.mergeErrors(errors, customErrors);\n    }\n    if (errors.length === 0) {\n      errors = null;\n    }\n\n    this._errors = errors;\n    this.setErrors(this._errors);\n  }\n\n  private mergeErrors(errors, newErrors) {\n    if (newErrors) {\n      if (Array.isArray(newErrors)) {\n        errors = errors.concat(...newErrors);\n      } else {\n        errors.push(newErrors);\n      }\n    }\n    return errors;\n  }\n\n  private setErrors(errors) {\n    this._errors = errors;\n    this._errorsChanges.next(errors);\n  }\n\n  public extendErrors(errors) {\n    errors = this.mergeErrors(this._errors || [], errors);\n    this.setErrors(errors);\n  }\n\n  searchProperty(path: string): FormProperty {\n    let prop: FormProperty = this;\n    let base: PropertyGroup = null;\n\n    let result = null;\n    if (path[0] === '/') {\n      base = this.findRoot();\n      result = base.getProperty(path.substr(1));\n    } else {\n      while (result === null && prop.parent !== null) {\n        prop = base = prop.parent;\n        result = base.getProperty(path);\n      }\n    }\n    return result;\n  }\n\n  public findRoot(): PropertyGroup {\n    let property: FormProperty = this;\n    while (property.parent !== null) {\n      property = property.parent;\n    }\n    return <PropertyGroup>property;\n  }\n\n  private setVisible(visible: boolean) {\n    this._visible = visible;\n    this._visibilityChanges.next(visible);\n    this.updateValueAndValidity();\n    if (this.parent) {\n      this.parent.updateValueAndValidity(false, true);\n    }\n  }\n\n  // A field is visible if AT LEAST ONE of the properties it depends on is visible AND has a value in the list\n  public _bindVisibility() {\n    let visibleIf = this.schema.visibleIf;\n    if (typeof visibleIf === 'object' && Object.keys(visibleIf).length === 0) {\n      this.setVisible(false);\n    }\n    else if (visibleIf !== undefined) {\n      let propertiesBinding = [];\n      for (let dependencyPath in visibleIf) {\n        if (visibleIf.hasOwnProperty(dependencyPath)) {\n          let property = this.searchProperty(dependencyPath);\n          if (property) {\n            const valueCheck = property.valueChanges.pipe(map(\n              value => {\n                if (visibleIf[dependencyPath].indexOf('$ANY$') !== -1) {\n                  return value.length > 0;\n                } else {\n                  return visibleIf[dependencyPath].indexOf(value) !== -1;\n                }\n              }\n            ));\n            const visibilityCheck = property._visibilityChanges;\n            const and = combineLatest([valueCheck, visibilityCheck], (v1, v2) => v1 && v2);\n            propertiesBinding.push(and);\n          } else {\n            console.warn('Can\\'t find property ' + dependencyPath + ' for visibility check of ' + this.path);\n          }\n        }\n      }\n\n      combineLatest(propertiesBinding, (...values: boolean[]) => {\n        return values.indexOf(true) !== -1;\n      }).pipe(distinctUntilChanged()).subscribe((visible) => {\n        this.setVisible(visible);\n      });\n    }\n  }\n}\n\nexport abstract class PropertyGroup extends FormProperty {\n\n  properties: FormProperty[] | { [key: string]: FormProperty } = null;\n\n  getProperty(path: string) {\n    let subPathIdx = path.indexOf('/');\n    let propertyId = subPathIdx !== -1 ? path.substr(0, subPathIdx) : path;\n\n    let property = this.properties[propertyId];\n    if (property !== null && subPathIdx !== -1 && property instanceof PropertyGroup) {\n      let subPath = path.substr(subPathIdx + 1);\n      property = (<PropertyGroup>property).getProperty(subPath);\n    }\n    return property;\n  }\n\n  public forEachChild(fn: (formProperty: FormProperty, str: String) => void) {\n    for (let propertyId in this.properties) {\n      if (this.properties.hasOwnProperty(propertyId)) {\n        let property = this.properties[propertyId];\n        fn(property, propertyId);\n      }\n    }\n  }\n\n  public forEachChildRecursive(fn: (formProperty: FormProperty) => void) {\n    this.forEachChild((child) => {\n      fn(child);\n      if (child instanceof PropertyGroup) {\n        (<PropertyGroup>child).forEachChildRecursive(fn);\n      }\n    });\n  }\n\n  public _bindVisibility() {\n    super._bindVisibility();\n    this._bindVisibilityRecursive();\n  }\n\n  private _bindVisibilityRecursive() {\n    this.forEachChildRecursive((property) => {\n      property._bindVisibility();\n    });\n  }\n\n  public isRoot() {\n    return this === this.root;\n  }\n}\n\n\n","import {FormProperty, PropertyGroup} from './formproperty';\nimport {NumberProperty} from './numberproperty';\nimport {StringProperty} from './stringproperty';\nimport {BooleanProperty} from './booleanproperty';\nimport {ObjectProperty} from './objectproperty';\nimport {ArrayProperty} from './arrayproperty';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class FormPropertyFactory {\n  constructor(private schemaValidatorFactory: SchemaValidatorFactory, private validatorRegistry: ValidatorRegistry) {\n  }\n\n  createProperty(schema: any, parent: PropertyGroup = null, propertyId?: string): FormProperty {\n    let newProperty = null;\n    let path = '';\n    if (parent) {\n      path += parent.path;\n      if (parent.parent !== null) {\n        path += '/';\n      }\n      if (parent.type === 'object') {\n        path += propertyId;\n      } else if (parent.type === 'array') {\n        path += '*';\n      } else {\n        throw 'Instanciation of a FormProperty with an unknown parent type: ' + parent.type;\n      }\n    } else {\n      path = '/';\n    }\n\n    if (schema.$ref) {\n      const refSchema = this.schemaValidatorFactory.getSchema(parent.root.schema, schema.$ref);\n      newProperty = this.createProperty(refSchema, parent, path);\n    } else {\n      switch (schema.type) {\n        case 'integer':\n        case 'number':\n          newProperty = new NumberProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'string':\n          newProperty = new StringProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'boolean':\n          newProperty = new BooleanProperty(this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'object':\n          newProperty = new ObjectProperty(this, this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        case 'array':\n          newProperty = new ArrayProperty(this, this.schemaValidatorFactory, this.validatorRegistry, schema, parent, path);\n          break;\n        default:\n          throw new TypeError(`Undefined type ${schema.type}`);\n      }\n    }\n\n    if (newProperty instanceof PropertyGroup) {\n      this.initializeRoot(newProperty);\n    }\n\n    return newProperty;\n  }\n\n  private initializeRoot(rootProperty: PropertyGroup) {\n    rootProperty.reset(null, true);\n    rootProperty._bindVisibility();\n  }\n}\n","import {AtomicProperty} from './atomicproperty';\n\nexport class NumberProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return null;\n  }\n\n  setValue(value, onlySelf = false) {\n    if (typeof value === 'string') {\n      if (value.length) {\n        value = value.indexOf('.') > -1 ? parseFloat(value) : parseInt(value, 10);\n      } else {\n        value = null;\n      }\n    }\n    this._value = value;\n    this.updateValueAndValidity(onlySelf, true);\n  }\n}\n","import {PropertyGroup} from './formproperty';\nimport {FormPropertyFactory} from './formpropertyfactory';\nimport {SchemaValidatorFactory} from '../schemavalidatorfactory';\nimport {ValidatorRegistry} from './validatorregistry';\n\nexport class ObjectProperty extends PropertyGroup {\n\n  private propertiesId: string[] = [];\n\n  constructor(private formPropertyFactory: FormPropertyFactory,\n              schemaValidatorFactory: SchemaValidatorFactory,\n              validatorRegistry: ValidatorRegistry,\n              schema: any,\n              parent: PropertyGroup,\n              path: string) {\n    super(schemaValidatorFactory, validatorRegistry, schema, parent, path);\n    this.createProperties();\n  }\n\n  setValue(value: any, onlySelf: boolean) {\n    for (const propertyId in value) {\n      if (value.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].setValue(value[propertyId], true);\n      }\n    }\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  reset(value: any, onlySelf = true) {\n    value = value || this.schema.default || {};\n    this.resetProperties(value);\n    this.updateValueAndValidity(onlySelf, true);\n  }\n\n  resetProperties(value: any) {\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        this.properties[propertyId].reset(value[propertyId], true);\n      }\n    }\n  }\n\n  createProperties() {\n    this.properties = {};\n    this.propertiesId = [];\n    for (const propertyId in this.schema.properties) {\n      if (this.schema.properties.hasOwnProperty(propertyId)) {\n        const propertySchema = this.schema.properties[propertyId];\n        this.properties[propertyId] = this.formPropertyFactory.createProperty(propertySchema, this, propertyId);\n        this.propertiesId.push(propertyId);\n      }\n    }\n  }\n\n  public _hasValue(): boolean {\n    return !!Object.keys(this.value).length;\n  }\n\n  public _updateValue() {\n    this.reduceValue();\n  }\n\n  public _runValidation() {\n    super._runValidation();\n\n    if (this._errors) {\n      this._errors.forEach(error => {\n        const prop = this.searchProperty(error.path.slice(1));\n        if (prop) {\n          prop.extendErrors(error);\n        }\n      });\n    }\n  }\n\n  private reduceValue(): void {\n    const value = {};\n    this.forEachChild((property, propertyId: string) => {\n      if (property.visible && property._hasValue()) {\n        value[propertyId] = property.value;\n      }\n    });\n    this._value = value;\n  }\n}\n","import {isBlank} from './utils';\n\nfunction formatMessage(message, path) {\n  return `Parsing error on ${path}: ${message}`;\n}\n\nfunction schemaError(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\nfunction schemaWarning(message, path): void {\n  let mesg = formatMessage(message, path);\n  throw new Error(mesg);\n}\n\nexport class SchemaPreprocessor {\n\n  static preprocess(jsonSchema: any, path = '/'): any {\n    jsonSchema = jsonSchema || {};\n    SchemaPreprocessor.normalizeExtensions(jsonSchema);\n    if (jsonSchema.type === 'object') {\n      SchemaPreprocessor.checkProperties(jsonSchema, path);\n      SchemaPreprocessor.checkAndCreateFieldsets(jsonSchema, path);\n    } else if (jsonSchema.type === 'array') {\n      SchemaPreprocessor.checkItems(jsonSchema, path);\n    }\n    SchemaPreprocessor.normalizeWidget(jsonSchema);\n    SchemaPreprocessor.recursiveCheck(jsonSchema, path);\n  }\n\n  private static checkProperties(jsonSchema, path: string) {\n    if (isBlank(jsonSchema.properties)) {\n      jsonSchema.properties = {};\n      schemaWarning('Provided json schema does not contain a \\'properties\\' entry. Output schema will be empty', path);\n    }\n  }\n\n  private static checkAndCreateFieldsets(jsonSchema: any, path: string) {\n    if (jsonSchema.fieldsets === undefined) {\n      if (jsonSchema.order !== undefined) {\n        SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n      } else {\n        SchemaPreprocessor.createFieldsets(jsonSchema);\n      }\n    }\n    SchemaPreprocessor.checkFieldsUsage(jsonSchema, path);\n  }\n\n  private static checkFieldsUsage(jsonSchema, path: string) {\n    let fieldsId: string[] = Object.keys(jsonSchema.properties);\n    let usedFields = {};\n    for (let fieldset of jsonSchema.fieldsets) {\n      for (let fieldId of fieldset.fields) {\n        if (usedFields[fieldId] === undefined) {\n          usedFields[fieldId] = [];\n        }\n        usedFields[fieldId].push(fieldset.id);\n      }\n    }\n\n    for (let fieldId of fieldsId) {\n      if (usedFields.hasOwnProperty(fieldId)) {\n        if (usedFields[fieldId].length > 1) {\n          schemaError(`${fieldId} is referenced by more than one fieldset: ${usedFields[fieldId]}`, path);\n        }\n        delete usedFields[fieldId];\n      } else if (jsonSchema.required.indexOf(fieldId) > -1) {\n        schemaError(`${fieldId} is a required field but it is not referenced as part of a 'order' or a 'fieldset' property`, path);\n      } else {\n        delete jsonSchema[fieldId];\n        schemaWarning(`Removing unreferenced field ${fieldId}`, path);\n      }\n    }\n\n    for (let remainingfieldsId in usedFields) {\n      if (usedFields.hasOwnProperty(remainingfieldsId)) {\n        schemaWarning(`Referencing non-existent field ${remainingfieldsId} in one or more fieldsets`, path);\n      }\n    }\n  }\n\n  private static createFieldsets(jsonSchema) {\n    jsonSchema.order = Object.keys(jsonSchema.properties);\n    SchemaPreprocessor.replaceOrderByFieldsets(jsonSchema);\n  }\n\n  private static replaceOrderByFieldsets(jsonSchema) {\n    jsonSchema.fieldsets = [{\n      id: 'fieldset-default',\n      title: jsonSchema.title || '',\n      description: jsonSchema.description || '',\n      name: jsonSchema.name || '',\n      fields: jsonSchema.order\n    }];\n    delete jsonSchema.order;\n  }\n\n  private static normalizeWidget(fieldSchema: any) {\n    let widget = fieldSchema.widget;\n    if (widget === undefined) {\n      widget = {'id': fieldSchema.type};\n    } else if (typeof widget === 'string') {\n      widget = {'id': widget};\n    }\n    fieldSchema.widget = widget;\n  }\n\n  private static checkItems(jsonSchema, path) {\n    if (jsonSchema.items === undefined) {\n      schemaError('No \\'items\\' property in array', path);\n    }\n  }\n\n  private static recursiveCheck(jsonSchema, path: string) {\n    if (jsonSchema.type === 'object') {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          let fieldSchema = jsonSchema.properties[fieldId];\n          SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n        }\n      }\n      if (jsonSchema.hasOwnProperty('definitions')) {\n        for (let fieldId in jsonSchema.definitions) {\n          if (jsonSchema.definitions.hasOwnProperty(fieldId)) {\n            let fieldSchema = jsonSchema.definitions[fieldId];\n            SchemaPreprocessor.removeRecursiveRefProperties(fieldSchema, `#/definitions/${fieldId}`);\n            SchemaPreprocessor.preprocess(fieldSchema, path + fieldId + '/');\n          }\n        }\n      }\n    } else if (jsonSchema.type === 'array') {\n      SchemaPreprocessor.preprocess(jsonSchema.items, path + '*/');\n    }\n  }\n\n  private static removeRecursiveRefProperties(jsonSchema, definitionPath) {\n    // to avoid infinite loop\n    if (jsonSchema.type === 'object') {\n      for (let fieldId in jsonSchema.properties) {\n        if (jsonSchema.properties.hasOwnProperty(fieldId)) {\n          if (jsonSchema.properties[fieldId].$ref\n            && jsonSchema.properties[fieldId].$ref === definitionPath) {\n            delete jsonSchema.properties[fieldId];\n          } else if (jsonSchema.properties[fieldId].type === 'object') {\n            SchemaPreprocessor.removeRecursiveRefProperties(jsonSchema.properties[fieldId], definitionPath);\n          }\n        }\n      }\n    }\n  }\n  \n  /**\n   * Enables alias names for JSON schema extensions.\n   *\n   * Copies the value of each alias JSON schema property\n   * to the JSON schema property of ngx-schema-form.\n   *\n   * @param schema JSON schema to enable alias names.\n   */\n  private static normalizeExtensions(schema: any): void {\n    const extensions = [\n        { name: \"fieldsets\", regex: /^x-?field-?sets$/i },\n        { name: \"widget\",    regex: /^x-?widget$/i },\n        { name: \"visibleIf\", regex: /^x-?visible-?if$/i }\n    ];\n    const keys = Object.keys(schema);\n    for (let i = 0; i < keys.length; ++i) {\n      let k = keys[i];\n      let e = extensions.find(e => !!k.match(e.regex));\n      if (e) {\n        let v = schema[k];\n        let copy = JSON.parse(JSON.stringify(v));\n        schema[e.name] = copy;\n      }\n    }\n  }\n}\n\n","import { AtomicProperty } from './atomicproperty';\n\nexport class StringProperty extends AtomicProperty {\n\n  fallbackValue() {\n    return '';\n  }\n\n}\n","export function isPresent(o) {\n  return o !== null && o !== undefined;\n}\n\nexport function isBlank(o) {\n  return o === null || o === undefined;\n}\n","import { Validator } from './validator';\n\nexport class ValidatorRegistry {\n  private validators: Validator[] = [];\n\n  register(path: string, validator: Validator) {\n    this.validators[path] = validator;\n  }\n\n  get(path: string): Validator {\n    return this.validators[path];\n  }\n\n  clear() {\n    this.validators = [];\n  }\n}\n","import {NgModule, ModuleWithProviders} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\n\nimport {FormElementComponent} from './formelement.component';\nimport {FormComponent} from './form.component';\nimport {WidgetChooserComponent} from './widgetchooser.component';\nimport {ArrayWidget} from './defaultwidgets/array/array.widget';\nimport {ButtonWidget} from './defaultwidgets/button/button.widget';\nimport {ObjectWidget} from './defaultwidgets/object/object.widget';\nimport {CheckboxWidget} from './defaultwidgets/checkbox/checkbox.widget';\nimport {FileWidget} from './defaultwidgets/file/file.widget';\nimport {IntegerWidget} from './defaultwidgets/integer/integer.widget';\nimport {TextAreaWidget} from './defaultwidgets/textarea/textarea.widget';\nimport {RadioWidget} from './defaultwidgets/radio/radio.widget';\nimport {RangeWidget} from './defaultwidgets/range/range.widget';\nimport {SelectWidget} from './defaultwidgets/select/select.widget';\nimport {StringWidget} from './defaultwidgets/string/string.widget';\nimport {DefaultWidgetRegistry} from './defaultwidgets/defaultwidgetregistry';\nimport {\n  DefaultWidget\n} from './default.widget';\n\nimport {WidgetRegistry} from './widgetregistry';\nimport {SchemaValidatorFactory, ZSchemaValidatorFactory} from './schemavalidatorfactory';\nimport {FormElementComponentAction} from './formelement.action.component';\n\nconst moduleProviders = [\n  {\n    provide: WidgetRegistry,\n    useClass: DefaultWidgetRegistry\n  },\n  {\n    provide: SchemaValidatorFactory,\n    useClass: ZSchemaValidatorFactory\n  }\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  declarations: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    DefaultWidget,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n  ],\n  entryComponents: [\n    FormElementComponent,\n    FormElementComponentAction,\n    FormComponent,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget,\n  ],\n  exports: [\n    FormComponent,\n    FormElementComponent,\n    FormElementComponentAction,\n    WidgetChooserComponent,\n    ArrayWidget,\n    ButtonWidget,\n    ObjectWidget,\n    CheckboxWidget,\n    FileWidget,\n    IntegerWidget,\n    TextAreaWidget,\n    RadioWidget,\n    RangeWidget,\n    SelectWidget,\n    StringWidget\n  ]\n})\nexport class SchemaFormModule {\n\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: SchemaFormModule,\n      providers: [...moduleProviders]\n    };\n  }\n\n}\n","import * as ZSchema from 'z-schema';\n\nexport abstract class SchemaValidatorFactory {\n  abstract createValidatorFn(schema): (value: any) => any;\n\n  abstract getSchema(schema, ref): any;\n}\n\nexport class ZSchemaValidatorFactory extends SchemaValidatorFactory {\n\n  protected zschema;\n\n  constructor() {\n    super();\n    this.zschema = new ZSchema({\n        breakOnFirstError: false\n    });\n  }\n\n  createValidatorFn(schema: any) {\n    return (value): { [key: string]: boolean } => {\n\n      if (schema.type === 'number' || schema.type === 'integer') {\n        value = +value;\n      }\n\n      this.zschema.validate(value, schema);\n      let err = this.zschema.getLastErrors();\n\n      this.denormalizeRequiredPropertyPaths(err);\n\n      return err || null;\n    };\n  }\n\n  getSchema(schema: any, ref: string) {\n    // check definitions are valid\n    const isValid = this.zschema.compileSchema(schema);\n    if (isValid) {\n      return this.getDefinition(schema, ref);\n    } else {\n      throw this.zschema.getLastError();\n    }\n  }\n\n  private denormalizeRequiredPropertyPaths(err: any[]) {\n    if (err && err.length) {\n      err = err.map(error => {\n        if (error.path === '#/' && error.code === 'OBJECT_MISSING_REQUIRED_PROPERTY') {\n          error.path = `${error.path}${error.params[0]}`;\n        }\n        return error;\n      });\n    }\n  }\n\n  private getDefinition(schema: any, ref: string) {\n    let foundSchema = schema;\n    ref.split('/').slice(1).forEach(ptr => {\n      if (ptr) {\n        foundSchema = foundSchema[ptr];\n      }\n    });\n    return foundSchema;\n  }\n}\n\n","module.exports = \"<ng-content></ng-content>\\n\"","import {\n  Component,\n  AfterContentInit,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  forwardRef\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { TemplateSchemaElement } from '../template-schema-element';\n\n\n@Component({\n  selector: 'sf-button',\n  templateUrl: './button.component.html',\n  providers: [\n    {\n      provide: TemplateSchemaElement,\n      useExisting: forwardRef(() => ButtonComponent),\n    }\n  ]\n})\nexport class ButtonComponent extends TemplateSchemaElement implements AfterContentInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  label = '';\n\n  @Input()\n  widget: string | object;\n\n  @Output()\n  click = new EventEmitter<any>();\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  private setLabelFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    // label as @Input takes priority over content text\n    if (textContent && !this.label) {\n      this.label = textContent;\n    }\n\n  }\n\n  ngAfterContentInit() {\n    this.setLabelFromContent();\n  }\n\n}\n","import { ElementRef, QueryList } from '@angular/core';\n\nimport { Validator } from '../../model/validator';\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { ButtonComponent } from '../button/button.component';\nimport { TemplateSchemaElement } from '../template-schema-element';\n\nimport { Field, FieldType } from './field';\n\nexport abstract class FieldParent extends TemplateSchemaElement {\n\n  name = '';\n  type: FieldType;\n\n  get path(): string {\n    if (!this.name) {\n      return '';\n    }\n\n    return '/' + this.name;\n  }\n\n  protected abstract actionRegistry: ActionRegistry;\n  protected abstract childButtons: QueryList<ButtonComponent>;\n\n\n  getButtons(): { id: string, label: string, widget?: string | object }[] {\n\n    return this.childButtons.map((button, index) => {\n\n      if (!button.id) {\n        const randomString = Math.random().toString(16).substr(2, 8);\n        // generate id for button\n        button.id = this.name + randomString + '_'  + (index + 1);\n      }\n\n      // register as button action the EventEmitter click\n      this.actionRegistry.register(\n        button.id,\n        button.click.emit.bind(button.click)\n      );\n\n      const _button = <any>{\n        id: button.id,\n        label: button.label,\n      };\n\n      if (button.widget) {\n        _button.widget = button.widget;\n      }\n\n      return _button;\n\n    });\n  }\n\n  protected getFieldsValidators(\n    fields: Field[]\n  ): { path: string, validator: Validator }[] {\n\n    return fields.reduce((validators, field) => {\n      return validators.concat(field.getValidators());\n    }, []);\n\n  }\n\n  protected getFieldsSchema(fields: Field[]) {\n    return fields.reduce((schema: any, field) => {\n\n      switch (this.type) {\n        case FieldType.Array:\n          schema.items = field.getSchema();\n          break;\n\n        default:\n          if (!schema.properties) {\n            schema.properties = {};\n          }\n\n          schema.properties[field.name] = field.getSchema();\n          break;\n      }\n\n      const buttons = field.getButtons();\n      if (buttons.length > 0) {\n        schema.buttons = buttons;\n      }\n\n      if (!field.required) {\n        return schema;\n      }\n\n      if (!schema.required) {\n        schema.required = [];\n      }\n      schema.required.push(field.name);\n      return schema;\n    }, {});\n  }\n\n}\n","module.exports = \"<ng-content ></ng-content>\\n\"","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  AfterContentInit,\n  ContentChildren,\n  ViewChild,\n  QueryList,\n  ElementRef,\n  forwardRef,\n  SimpleChanges,\n  SimpleChange,\n  OnChanges\n} from '@angular/core';\nimport { Observable, merge } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { Action } from '../../model/action';\nimport { ActionRegistry } from '../../model/actionregistry';\nimport { Validator } from '../../model/validator';\n\nimport { TemplateSchemaElement } from '../template-schema-element';\nimport { TemplateSchemaService } from '../template-schema.service';\nimport { ButtonComponent } from '../button/button.component';\n\nimport { FieldParent } from './field-parent';\nimport { FieldType, Field } from './field';\nimport { ItemComponent } from './item/item.component';\n\n\n@Component({\n  selector: 'sf-field',\n  templateUrl: './field.component.html'\n})\nexport class FieldComponent extends FieldParent implements\nField, OnChanges, AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ItemComponent)\n  childItems: QueryList<ItemComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  @Input()\n  name: string;\n\n  @Input()\n  type = FieldType.String;\n\n  @Input()\n  format: string;\n\n  @Input()\n  required: boolean;\n\n  @Input()\n  readOnly: boolean;\n\n  @Input()\n  title: string;\n\n  @Input()\n  description: string;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  widget: string | object;\n\n  @Input()\n  validator: Validator;\n\n  @Input()\n  schema: any = { };\n\n  constructor(\n    private elementRef: ElementRef,\n    private templateSchemaService: TemplateSchemaService,\n    protected actionRegistry: ActionRegistry\n  ) {\n    super();\n  }\n\n  getSchema(): any {\n\n    const { properties, items, required } = this.getFieldsSchema(\n      this.childFields.filter(field => field !== this)\n    );\n\n    const oneOf = this.getOneOf();\n\n    const schema = <any>{\n      type: this.type\n    };\n\n    if (this.title !== undefined) {\n      schema.title = this.title;\n    }\n\n    if (properties !== undefined) {\n      schema.properties = properties;\n    }\n\n    if (items !== undefined) {\n      schema.items = items;\n    }\n\n    // requried child fields\n    if (required !== undefined) {\n      schema.required = required;\n    }\n\n    if (oneOf !== undefined) {\n      schema.oneOf = oneOf;\n    }\n\n    if (this.description !== undefined) {\n      schema.description = this.description;\n    }\n\n    if (this.placeholder !== undefined) {\n      schema.placeholder = this.placeholder;\n    }\n\n    if (this.format !== undefined) {\n      schema.format = this.format;\n    }\n\n    if (this.widget !== undefined) {\n      schema.widget = this.widget;\n    }\n\n    if (this.readOnly !== undefined) {\n      schema.readOnly = this.readOnly;\n    }\n\n    const buttons = this.getButtons();\n    if (buttons.length > 0) {\n      schema.buttons = buttons;\n    }\n\n    // @Input schema takes precedence\n    return Object.assign(schema, this.schema);\n\n  }\n\n  getValidators(): { path: string, validator: Validator }[] {\n\n    // registering validator here is not possible since prop full path is needed\n    const childValidators = this.getFieldsValidators(\n      this.childFields.filter(field => field !== this)\n    );\n    const validators = childValidators.map(({ path, validator }) => {\n      return {\n        path: this.path + path,\n        validator\n      };\n    });\n\n    if (!this.validator) {\n      return validators;\n    }\n\n    validators.push({ path: this.path, validator: this.validator });\n    return validators;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    const keys = Object.keys(changes);\n    if (keys.length > 0) {\n      for (const key of keys) {\n        if (!changes[key].isFirstChange()) {\n          // on any input change, force schema change generation\n          this.templateSchemaService.changed();\n          break;\n        }\n      }\n    }\n\n  }\n\n\n  private getOneOf() {\n\n    if (this.childItems.length === 0) {\n      return;\n    }\n\n    const items = this.childItems.map(({ value, description }) => {\n      if (!Array.isArray(value)) {\n        return { enum: [value], description };\n      }\n\n      return { enum: value, description };\n    });\n\n    if (items.length === 0) {\n      return;\n    }\n\n    return items;\n  }\n\n\n  private setTitleFromContent() {\n    const textContent = this.getTextContent(this.elementRef);\n\n    //  title as @Input takes priority over content text\n    if (textContent && !this.title) {\n      this.title = textContent;\n    }\n  }\n\n  ngAfterContentInit() {\n\n    // cache it\n    this.setTitleFromContent();\n\n    merge(\n      this.childFields.changes,\n      this.childItems.changes,\n      this.childButtons.changes\n    )\n    .subscribe(() => this.templateSchemaService.changed());\n  }\n\n}\n","import { Validator } from '../../model/validator';\n\nexport enum FieldType {\n  String = 'string',\n  Object = 'object',\n  Array = 'array',\n  Boolean = 'boolean',\n  Integer =  'integer',\n  Number = 'number',\n}\n\nexport interface Field {\n  name: string;\n  required: boolean;\n  getSchema(): any;\n  getButtons(): any;\n  getValidators(): { path: string, validator: Validator }[];\n}\n\n\n","module.exports = \"<ng-content></ng-content>\\n\"","import {\n Component,\n ElementRef,\n Input,\n OnInit,\n forwardRef\n} from '@angular/core';\n\nimport { TemplateSchemaElement } from '../../template-schema-element';\n\n\n@Component({\n  selector: 'sf-item',\n  templateUrl: './item.component.html'\n})\nexport class ItemComponent extends TemplateSchemaElement implements OnInit {\n\n  @Input()\n  value: any;\n\n  description: string;\n\n  constructor(private elementRef: ElementRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.description = this.getTextContent(this.elementRef);\n  }\n\n}\n","import { ElementRef } from '@angular/core';\n\nexport class TemplateSchemaElement {\n\n  getTextContent(elementRef: ElementRef): string {\n    const nodes = Array.from(elementRef.nativeElement.childNodes);\n    const node = <HTMLElement>nodes.filter((el: HTMLElement) => {\n      return el.nodeType === el.TEXT_NODE;\n    }).pop();\n\n    if (!node || !node.nodeValue) {\n      return '';\n    }\n\n    return node.nodeValue.trim();\n  }\n\n}\n","import {\n  Directive,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  HostBinding,\n  SimpleChange,\n  SimpleChanges\n} from '@angular/core';\nimport { merge } from 'rxjs';\n\nimport { FormComponent } from '../form.component';\nimport { ActionRegistry } from '../model/actionregistry';\nimport { ValidatorRegistry } from '../model/validatorregistry';\nimport { TerminatorService } from '../terminator.service';\n\nimport { TemplateSchemaService } from './template-schema.service';\nimport { FieldComponent } from './field/field.component';\nimport { FieldType, Field } from './field/field';\nimport { ButtonComponent } from './button/button.component';\nimport { FieldParent } from './field/field-parent';\n\n\n@Directive({\n  selector: 'sf-form[templateSchema]',\n  providers: [\n    TemplateSchemaService\n  ]\n})\nexport class TemplateSchemaDirective extends FieldParent implements AfterContentInit {\n\n  @ContentChildren(FieldComponent)\n  childFields: QueryList<FieldComponent>;\n\n  @ContentChildren(ButtonComponent)\n  childButtons: QueryList<ButtonComponent>;\n\n  constructor(\n    protected actionRegistry: ActionRegistry,\n    protected validatorRegistry: ValidatorRegistry,\n    private formComponent: FormComponent,\n    private terminatorService: TerminatorService,\n    private templateSchemaService: TemplateSchemaService\n  ) {\n    super();\n  }\n\n  setFormDocumentSchema(fields: FieldComponent[]) {\n      this.actionRegistry.clear();\n      this.validatorRegistry.clear();\n\n      const schema = this.getFieldsSchema(fields);\n\n      const validators = this.getFieldsValidators(fields);\n      validators.forEach(({ path, validator }) => {\n        this.validatorRegistry.register(path, validator);\n      });\n\n      const previousSchema = this.formComponent.schema;\n      this.formComponent.schema = {\n        type: FieldType.Object,\n        properties: schema.properties\n      };\n\n      if (schema.required && schema.required.length > 0) {\n        this.formComponent.schema.requred = schema.required;\n      }\n\n      const buttons = this.getButtons();\n      if (buttons.length > 0) {\n        this.formComponent.schema.buttons = buttons;\n      }\n\n      this.formComponent.ngOnChanges({\n        schema: new SimpleChange(\n          previousSchema,\n          this.formComponent.schema,\n          Boolean(previousSchema)\n        )\n      });\n\n  }\n\n\n  ngAfterContentInit() {\n\n    if (this.childFields.length > 0) {\n      this.setFormDocumentSchema(this.childFields.toArray());\n    }\n\n    merge(\n      this.childFields.changes,\n      this.templateSchemaService.changes\n    )\n   .subscribe(() => {\n      this.terminatorService.destroy();\n      this.setFormDocumentSchema(this.childFields.toArray());\n    });\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FieldComponent } from './field/field.component';\nimport { TemplateSchemaDirective } from './template-schema.directive';\nimport { ButtonComponent } from './button/button.component';\nimport { ItemComponent } from './field/item/item.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ],\n  exports: [\n    TemplateSchemaDirective,\n    FieldComponent,\n    ButtonComponent,\n    ItemComponent\n  ]\n})\nexport class TemplateSchemaModule { }\n","import { Injectable, EventEmitter } from '@angular/core';\n\nexport class TemplateSchemaService {\n\n  changes = new EventEmitter();\n\n  constructor() { }\n\n  changed() {\n    this.changes.emit();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TerminatorService {\n  public onDestroy: Subject<boolean>;\n\n  constructor() {\n    this.onDestroy = new Subject();\n  }\n\n  destroy() {\n    this.onDestroy.next(true);\n  }\n}\n","import {AfterViewInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {ArrayProperty} from './model/arrayproperty';\nimport {FormProperty} from './model/formproperty';\nimport {ObjectProperty} from './model/objectproperty';\n\nexport abstract class Widget<T extends FormProperty> {\n  formProperty: T;\n  control: FormControl;\n  errorMessages: string[];\n\n  id: string = '';\n  name: string = '';\n  schema: any = {};\n}\n\nexport class ControlWidget extends Widget<FormProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.valueChanges.subscribe((newValue) => {\n      if (control.value !== newValue) {\n        control.setValue(newValue, {emitEvent: false});\n      }\n    });\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, { emitEvent: true });\n      const messages = (errors || [])\n        .filter(e => {\n          return e.path && e.path.slice(1) === this.formProperty.path;\n        })\n        .map(e => e.message);\n      this.errorMessages = messages.filter((m, i) => messages.indexOf(m) === i);\n    });\n    control.valueChanges.subscribe((newValue) => {\n      this.formProperty.setValue(newValue, false);\n    });\n  }\n\n}\n\nexport class ArrayLayoutWidget extends Widget<ArrayProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, {emitEvent: true});\n    });\n  }\n}\n\nexport class ObjectLayoutWidget extends Widget<ObjectProperty> implements AfterViewInit {\n\n  ngAfterViewInit() {\n    const control = this.control;\n    this.formProperty.errorsChanges.subscribe((errors) => {\n      control.setErrors(errors, {emitEvent: true});\n    });\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  ChangeDetectorRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { TerminatorService } from './terminator.service';\nimport { WidgetFactory } from './widgetfactory';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'sf-widget-chooser',\n  template: `<div #target></div>`,\n})\nexport class WidgetChooserComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input() widgetInfo: any;\n\n  @Output() widgetInstanciated = new EventEmitter<any>();\n\n  @ViewChild('target', {read: ViewContainerRef}) container: ViewContainerRef;\n\n  private widgetInstance: any;\n  private ref: ComponentRef<any>;\n  private subs: Subscription;\n\n  constructor(\n    private widgetFactory: WidgetFactory = null,\n    private cdr: ChangeDetectorRef,\n    private terminator: TerminatorService,\n  ) { }\n\n  ngOnInit() {\n    this.subs = this.terminator.onDestroy.subscribe(destroy => {\n      if (destroy) {\n        this.ref.destroy();\n      }\n    });\n  }\n\n  ngOnChanges() {\n    this.ref = this.widgetFactory.createWidget(this.container, this.widgetInfo.id);\n    this.widgetInstanciated.emit(this.ref.instance);\n    this.widgetInstance = this.ref.instance;\n    this.cdr.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import {\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injectable\n} from '@angular/core';\n\nimport { WidgetRegistry } from './widgetregistry';\n\n@Injectable()\nexport class WidgetFactory {\n\n  private resolver: ComponentFactoryResolver;\n  private registry: WidgetRegistry;\n\n  constructor(registry: WidgetRegistry, resolver: ComponentFactoryResolver) {\n    this.registry = registry;\n    this.resolver = resolver;\n  }\n\n  createWidget(container: ViewContainerRef, type: string): ComponentRef<any> {\n    let componentClass = this.registry.getWidgetType(type);\n\n    let componentFactory = this.resolver.resolveComponentFactory(componentClass);\n    return container.createComponent(componentFactory);\n  }\n}\n","export class WidgetRegistry {\n\n  private widgets: { [type: string]: any } = {};\n\n  private defaultWidget: any;\n\n  constructor() { }\n\n  setDefaultWidget(widget: any) {\n    this.defaultWidget = widget;\n  }\n\n  getDefaultWidget() {\n    return this.defaultWidget;\n  }\n\n  hasWidget(type: string) {\n    return this.widgets.hasOwnProperty(type);\n  }\n\n  register(type: string, widget: any) {\n    this.widgets[type] = widget;\n  }\n\n  getWidgetType(type: string): any {\n    if (this.hasWidget(type)) {\n      return this.widgets[type];\n    }\n    return this.defaultWidget;\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-static-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/json\\\">NGX Schema Form</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/json\\\">JSON Schema </a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/template\\\">Template Schema</a></li>\\n      </ul>\\n      <div *ngIf=\\\"page === 'json'\\\" class=\\\"navbar-form navbar-right\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"schemaUrl\\\" name=\\\"schemaUrl\\\" class=\\\"form-control\\\" placeholder=\\\"Load schema form URL\\\">\\n        </div>\\n        <button (click)=\\\"loadSchema()\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 5px\\\">Load</button>\\n        <button *ngIf=\\\"schemaUrl\\\" (click)=\\\"removeSchema()\\\" class=\\\"btn btn-default\\\" style=\\\"margin-left: 5px\\\">Clear</button>\\n      </div>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent implements OnInit {\n\n  page: string;\n  schemaUrl: string;\n\n  constructor(\n    private appService: AppService,\n    private router: Router\n  ) { }\n\n  loadSchema() {\n    this.appService.loadSchema(this.schemaUrl);\n  }\n\n  removeSchema() {\n    this.schemaUrl = undefined;\n    this.appService.removeSchema();\n  }\n\n  ngOnInit() {\n    const data = this.appService.loadSchema();\n    if (data && data.url) {\n      this.schemaUrl = data.url;\n    }\n\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd)\n    ).subscribe(() => {\n      this.page = this.router.routerState.snapshot.url.replace('/', '');\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport {\n  SchemaFormModule,\n  SchemaValidatorFactory,\n  ZSchemaValidatorFactory,\n  TemplateSchemaModule,\n  WidgetRegistry,\n  DefaultWidgetRegistry\n} from 'ngx-schema-form';\n\nimport { routes } from './app.routes';\nimport { AppComponent } from './app.component';\nimport {\n  JsonSchemaExampleComponent\n} from './json-schema-example/json-schema-example.component';\nimport {\n  TemplateSchemaExampleComponent\n} from './template-schema-example/template-schema-example.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonSchemaExampleComponent,\n    TemplateSchemaExampleComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    SchemaFormModule,\n    TemplateSchemaModule\n  ],\n  providers: [\n    {provide: WidgetRegistry, useClass: DefaultWidgetRegistry},\n    {\n      provide: SchemaValidatorFactory,\n      useClass: ZSchemaValidatorFactory\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\n\nimport {\n  JsonSchemaExampleComponent\n} from './json-schema-example/json-schema-example.component';\nimport {\n  TemplateSchemaExampleComponent\n} from './template-schema-example/template-schema-example.component';\n\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'json',\n    pathMatch: 'full'\n  },\n  {\n    path: 'json',\n    component: JsonSchemaExampleComponent\n  },\n  {\n    path: 'template',\n    component: TemplateSchemaExampleComponent\n  }\n];\n\n\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst DATA = 'data';\n\nexport interface AppData {\n  url: string;\n  schema: object;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AppService {\n\n  dataChanged = new BehaviorSubject<AppData | null>(null);\n\n  get data(): AppData {\n    if (this._data) {\n      return this._data;\n    }\n\n    const data = sessionStorage.getItem(DATA);\n    if (data) {\n      this._data = JSON.parse(data);\n      return this._data;\n    }\n\n    return;\n  }\n\n  set data(data: AppData) {\n    this._data = data;\n    sessionStorage.setItem(DATA, JSON.stringify(data));\n  }\n\n  private _data: AppData;\n\n  constructor(private http: HttpClient) { }\n\n\n  loadSchema(url?: string): AppData {\n    if (!url) {\n      this.dataChanged.next(this.data);\n      return this.data;\n    }\n\n    this.http.get(url).subscribe((schema) => {\n      this.data = { url, schema };\n      this.dataChanged.next(this.data);\n    });\n\n    return this.data;\n  }\n\n  removeSchema() {\n    sessionStorage.removeItem(DATA);\n    this._data = undefined;\n    this.dataChanged.next(null);\n  }\n\n\n\n}\n","import {FormProperty, PropertyGroup} from '../../../projects/schema-form/src/lib/model';\n\nconst myFormBindings = {\n  '/name': [\n    {\n      'input': (event, formProperty: FormProperty) => {\n        const parent: PropertyGroup = formProperty.findRoot();\n\n        /**\n         * Set the input value for the children\n         */\n        const child1: FormProperty = parent.getProperty('children/0/name');\n\n        child1.setValue(formProperty.value, false);\n\n        const child2: FormProperty = parent.getProperty('children/1/name');\n        child2.setValue(event.target.value, false);\n\n        /**\n         * Get the input value for all the children\n         */\n        for (const objectProperty of parent.getProperty('children').properties) {\n          console.log('Value for child ', objectProperty, objectProperty.properties['name'].value);\n        }\n      }\n    },\n    {\n      'click': (event, formProperty: FormProperty) => {\n        console.log('2222 Called event!', event.target, event, formProperty);\n      }\n    }\n  ]\n};\n\nexport default myFormBindings;\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <label for=\\\"samples\\\">Select schema form example: </label>&nbsp;\\n      <select id=\\\"samples\\\" (change)=\\\"changeSchema($event.target.value)\\\">\\n        <option *ngFor=\\\"let sample of samples\\\" (select)=\\\"sample.event()\\\" [selected]=\\\"sample.selected\\\">{{sample.label}}</option>\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Form:</h3>\\n      <sf-form (onErrorChange)=\\\"logErrors($event.value)\\\"\\n               (onChange)=\\\"setValue($event.value)\\\"\\n               [schema]=\\\"schema\\\"\\n               [model]=\\\"model\\\"\\n               [validators]=\\\"fieldValidators\\\"\\n               [actions]=\\\"actions\\\"\\n               [bindings]=\\\"fieldBindings\\\">\\n      </sf-form>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Schema:</h3>\\n      <pre>{{schema | json}}</pre>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <h3>Model:</h3>\\n      <pre>{{value | json}}</pre>\\n    </div>\\n  </div>\\n</div>\\n\"","import {\n  Component,\n  ViewEncapsulation,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport {WidgetRegistry, Validator, Binding} from 'ngx-schema-form';\nimport {Subscription} from 'rxjs';\n\nimport sampleSchema1 from './sampleschema.json';\nimport sampleSchema2 from './otherschema.json';\nimport sampleModel from './samplemodel.json';\nimport binding_sample_schema from './binding_sample_schema.json';\nimport binding_sample_model from './binding_sample_model.json';\nimport binding_sample_bindings from './binding_sample_bindings';\n\nimport {AppService, AppData} from '../app.service';\n\n@Component({\n  selector: 'sf-json-schema-example',\n  templateUrl: './json-schema-example.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class JsonSchemaExampleComponent implements OnInit, OnDestroy {\n  schema: any = {properties: {}};\n  model: any = {};\n  value: any;\n  fieldValidators: { [fieldId: string]: Validator } = {};\n  actions = {};\n  fieldBindings: { [path: string]: Binding[] } = {};\n  schemaUrl: string;\n\n  private subs: Subscription;\n\n  samples = [\n    {label: 'Sample 1 - General', event: this.changeSchemaFirst, selected: true},\n    {label: 'Sample 2 - Custom bindings', event: this.changeSchemaWithBindings, selected: false},\n    {label: 'Sample 3 - Otherschema', event: this.changeSchemaOtherschema, selected: false}\n  ];\n\n  constructor(\n    registry: WidgetRegistry,\n    private appService: AppService\n  ) {\n\n\n  }\n\n  ngOnInit() {\n\n    this.subs = this.appService.dataChanged\n      .subscribe((data: AppData | null) => {\n        if (data) {\n          this.schema = data.schema;\n          return;\n        }\n        this.changeSchemaInitial();\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n  }\n\n  logErrors(errors) {\n    console.log('ERRORS', errors);\n  }\n\n  changeSchemaInitial() {\n    for (const sample of this.samples) {\n      if (sample.selected) {\n        sample.event.bind(this)();\n      }\n    }\n  }\n\n  changeSchema(event) {\n    console.log(event);\n    for (const sample of this.samples) {\n      if (sample.label === event) {\n        sample.event.bind(this)();\n      }\n    }\n  }\n\n  changeSchemaFirst() {\n    this.schema = sampleSchema1;\n    this.model = sampleModel;\n    this.fieldBindings = {};\n    this.fieldValidators = {};\n    this.actions = {};\n\n    this.fieldValidators['/bornOn'] = (value, property, form) => {\n      let errors = null;\n      const dateArr = value.split('-');\n\n      if (dateArr.length === 3) {\n        const now = new Date();\n        const min = new Date(\n          now.getFullYear() - 100,\n          now.getMonth(),\n          now.getDay(),\n        ).getTime();\n        const max = new Date().getTime();\n        const born = new Date(\n          dateArr[0],\n          dateArr[1] - 1,\n          dateArr[2],\n        ).getTime();\n\n        if (born < min || born > max) {\n          errors = [\n            {\n              bornOn: {\n                expectedValue: '>today - 100 && < today',\n                actualValue: value,\n              },\n            },\n          ];\n        }\n      }\n      return errors;\n    };\n    this.fieldValidators['/promotion'] = (value, property, form) => {\n      if (value === 'student') {\n        const bornOn = form.getProperty('/bornOn');\n\n        if (bornOn.valid) {\n          const date = bornOn.value.split('-');\n          const validYear = new Date().getFullYear() - 17;\n\n          try {\n            const actualYear = parseInt(date[0], 10);\n\n            if (actualYear < validYear) {\n              return null;\n            }\n\n            return [\n              {\n                promotion: {\n                  bornOn: {\n                    expectedValue: 'year<' + validYear,\n                    actualValue: actualYear,\n                  },\n                },\n              },\n            ];\n          } catch (e) {\n          }\n        }\n\n        return [\n          {\n            promotion: {\n              bornOn: {\n                expectedFormat: 'date',\n                actualValue: bornOn.value,\n              },\n            },\n          },\n        ];\n      }\n\n      return null;\n    };\n    this.actions['alert'] = (property, options) => {\n      property.forEachChildRecursive(child => {\n        console.log(child.valid, child);\n      });\n      alert(JSON.stringify(property.value));\n    };\n    this.actions['reset'] = (form, options) => {\n      form.reset();\n    };\n    this.actions['reset'] = (form, options) => {\n      form.reset();\n    };\n    this.actions['disable'] = this.disableAll.bind(this);\n\n\n  }\n\n  changeSchemaOtherschema() {\n    this.schema = sampleSchema2;\n    this.model = {};\n    this.fieldBindings = {};\n    this.fieldValidators = {};\n    this.actions = {};\n  }\n\n  changeSchemaWithBindings() {\n    this.schema = binding_sample_schema;\n    this.model = binding_sample_model;\n    this.fieldBindings = binding_sample_bindings;\n    this.fieldValidators = {};\n    this.actions = {};\n  }\n\n  disableAll() {\n    Object.keys(this.schema.properties).map(prop => {\n      this.schema.properties[prop].readOnly = true;\n    });\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n}\n","module.exports = \"textarea.template-schema {\\n  resize: none;\\n  width: 100% !important;\\n  height: 100% !important;\\n  padding: 9.5px;\\n  margin: 0;\\n  font-size: 13px;\\n  line-height: 1.42857143;\\n  color: #6c6b6b;\\n  background-color: #f5f5f5;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <h3>Form:</h3>\\n            <sf-form #form [(ngModel)]=\\\"model\\\" templateSchema>\\n                <sf-field name=\\\"recipient\\\" type=\\\"object\\\">\\n                    Part 1 - Recipient\\n                    <sf-field\\n                        name=\\\"firstName\\\"\\n                        [required]=\\\"true\\\"\\n                        description=\\\"(First Name)\\\"\\n                        placeholder=\\\"First Name\\\"\\n                        [schema]=\\\"{ maxLength: 40, minLength: 2 }\\\">\\n                        First Name\\n                    </sf-field>\\n                    <sf-field\\n                        name=\\\"lastName\\\"\\n                        [required]=\\\"true\\\"\\n                        description=\\\"(Last Name)\\\"\\n                        placeholder=\\\"Last Name\\\"\\n                        [schema]=\\\"{ maxLength: 40, minLength: 2 }\\\">\\n                        Last Name\\n                    </sf-field>\\n                    <sf-field name=\\\"categories\\\" type=\\\"array\\\" widget=\\\"checkbox\\\">\\n                        Categories\\n                        <sf-field type=\\\"string\\\">\\n                            <sf-item value=\\\"dog\\\">Dog</sf-item>\\n                            <sf-item value=\\\"cat\\\">Cat</sf-item>\\n                            <sf-item value=\\\"dolphin\\\">Dolphin</sf-item>\\n                        </sf-field>\\n                    </sf-field>\\n                    <sf-field\\n                        name=\\\"bornOn\\\"\\n                        widget=\\\"date\\\"\\n                        format=\\\"date\\\"\\n                        [schema]=\\\"{ default: '1800-12-12' }\\\"\\n                        description=\\\"(Born On)\\\"\\n                        placeholder=\\\"Ex: 2009-03-11\\\">\\n                        Born On\\n                    </sf-field>\\n                    <sf-field\\n                        name=\\\"moreInfo\\\"\\n                        type=\\\"boolean\\\"\\n                        description=\\\"More information?\\\"\\n                        widget=\\\"checkbox\\\"\\n                        [schema]=\\\"{ default: true }\\\"></sf-field>\\n                    <sf-field\\n                        name=\\\"favoriteColor\\\"\\n                        widget=\\\"color\\\"\\n                        [schema]=\\\"{ default: '#aaa111', pattern: '^#[0-9a-fA-F]{6}$', visibleIf: { moreInfo: [true] } }\\\">\\n                        Favorite color\\n                    </sf-field>\\n                    <sf-field name=\\\"colors\\\" type=\\\"array\\\" widget=\\\"array\\\">\\n                        Colors\\n                        <sf-field type=\\\"string\\\" widget=\\\"color\\\">\\n                            <sf-button id=\\\"Remove\\\" (click)=\\\"onClick('Supprimer')\\\">Supprimer</sf-button>\\n                        </sf-field>\\n                        <sf-button id=\\\"addItem\\\" (click)=\\\"onClick('Ajouter')\\\">Ajouter</sf-button>\\n                        <sf-button id=\\\"reset\\\" (click)=\\\"onClick('Reset')\\\">Reset</sf-button>\\n                    </sf-field>\\n                </sf-field>\\n\\n                <sf-field name=\\\"survey\\\" type=\\\"object\\\">\\n                    Little survey\\n                    <sf-field name=\\\"q1\\\" description=\\\"Enter a number\\\"></sf-field>\\n                    <sf-field name=\\\"q2\\\" type=\\\"object\\\" description=\\\"Address\\\">\\n                        <sf-field\\n                            name=\\\"color\\\"\\n                            description=\\\"Color\\\"\\n                            widget=\\\"color\\\"\\n                            [schema]=\\\"{ default: '#aaa000', pattern: 'ff$' }\\\"></sf-field>\\n                        <sf-field\\n                            name=\\\"number\\\"\\n                            description=\\\"Zip\\\"\\n                            widget=\\\"number\\\"\\n                            [schema]=\\\"{ default: 15 }\\\"></sf-field>\\n                    </sf-field>\\n                </sf-field>\\n                <sf-field name=\\\"transaction\\\" type=\\\"object\\\">\\n                    Part 2 - Transactions\\n                    <sf-field\\n                        name=\\\"transactionNumber\\\"\\n                        description=\\\"Transaction number\\\"\\n                        widget=\\\"number\\\"\\n                        [readOnly]=\\\"true\\\"\\n                        [schema]=\\\"{ default: 15 }\\\"></sf-field>\\n                    <sf-field\\n                        name=\\\"transactionDescription\\\"\\n                        widget=\\\"textarea\\\"\\n                        description=\\\"What is being transacted\\\"></sf-field>\\n\\n                    <sf-field name=\\\"promotion\\\" widget=\\\"radio\\\" description=\\\"promotion\\\">\\n                        <sf-item value=\\\"student\\\">Student discount (20%)</sf-item>\\n                        <sf-item value=\\\"summer\\\">Summer 2016 discount (15%)</sf-item>\\n                        <sf-item value=\\\"none\\\">None</sf-item>\\n                    </sf-field>\\n\\n                    <sf-field name=\\\"category\\\" type=\\\"array\\\" widget=\\\"select\\\" description=\\\"Category\\\">\\n                        <sf-field type=\\\"string\\\">\\n                            <sf-item value=\\\"design\\\">Design</sf-item>\\n                            <sf-item value=\\\"hightech\\\">High-Tech</sf-item>\\n                            <sf-item value=\\\"materials\\\">Materials</sf-item>\\n                            <sf-item value=\\\"services\\\">Services</sf-item>\\n                        </sf-field>\\n                    </sf-field>\\n                </sf-field>\\n\\n                <sf-field name=\\\"shipping\\\" type=\\\"object\\\">\\n                    Part 3 - Shipping\\n                    <sf-field\\n                        name=\\\"numberOfBoxes\\\"\\n                        description=\\\"Number of boxes required\\\"\\n                        widget=\\\"range\\\"\\n                        [schema]=\\\"{ minimun: 1, maximun: 10 }\\\"></sf-field>\\n\\n                    <sf-field\\n                        name=\\\"delivery\\\"\\n                        type=\\\"string\\\"\\n                        widget=\\\"select\\\"\\n                        [schema]=\\\"{ default: 'fedex' }\\\"\\n                        description=\\\"Delivery service\\\">\\n                        <sf-item value=\\\"fedex\\\">Fedex</sf-item>\\n                        <sf-item value=\\\"ups\\\">UPS</sf-item>\\n                        <sf-item value=\\\"other\\\">Other</sf-item>\\n                    </sf-field>\\n\\n                </sf-field>\\n\\n                <sf-field name=\\\"contact\\\" type=\\\"object\\\">\\n                    Part 4 - Email\\n                    <sf-field\\n                        name=\\\"useCustomEmail\\\"\\n                        type=\\\"boolean\\\"\\n                        description=\\\"Write a custom email ?\\\"></sf-field>\\n                    <sf-field\\n                        *ngIf=\\\"model?.contact?.useCustomEmail\\\"\\n                        name=\\\"customEmail\\\"\\n                        widget=\\\"textarea\\\"\\n                        description=\\\"Email to send\\\"></sf-field>\\n                </sf-field>\\n\\n                <sf-field name=\\\"confirmation\\\" type=\\\"object\\\">\\n                    Part 5 - Confirmation\\n                    <sf-field name=\\\"confirmationEmail\\\" format=\\\"email\\\" description=\\\"Email\\\"></sf-field>\\n                    <sf-field name=\\\"password\\\" widget=\\\"password\\\" description=\\\"Password\\\"></sf-field>\\n                </sf-field>\\n\\n                <sf-button (click)=\\\"onClick('Something')\\\">Do Something</sf-button>\\n            </sf-form>\\n\\n        </div>\\n        <div class=\\\"col-md-4\\\" style=\\\"height: 1000px\\\">\\n            <h3>Template:</h3>\\n<textarea class=\\\"template-schema\\\" readonly wrap=\\\"off\\\" resize=\\\"off\\\">\\n&lt;sf-form #form [(ngModel)]=\\\"model\\\" templateSchema&gt;\\n    &lt;sf-field name=\\\"recipient\\\" type=\\\"object\\\"&gt;\\n        Part 1 - Recipient\\n        &lt;sf-field\\n            name=\\\"firstName\\\"\\n            [required]=\\\"true\\\"\\n            description=\\\"(First Name)\\\"\\n            placeholder=\\\"First Name\\\"\\n            [schema]=\\\"{ maxLength: 40, minLength: 2 }\\\"&gt;\\n            First Name\\n        &lt;/sf-field&gt;\\n        &lt;sf-field\\n            name=\\\"lastName\\\"\\n            [required]=\\\"true\\\"\\n            description=\\\"(Last Name)\\\"\\n            placeholder=\\\"Last Name\\\"\\n            [schema]=\\\"{ maxLength: 40, minLength: 2 }\\\"&gt;\\n            Last Name\\n        &lt;/sf-field&gt;\\n        &lt;sf-field name=\\\"categories\\\" type=\\\"array\\\" widget=\\\"checkbox\\\"&gt;\\n            Categories\\n            &lt;sf-field type=\\\"string\\\"&gt;\\n                &lt;sf-item value=\\\"dog\\\"&gt;Dog&lt;/sf-item&gt;\\n                &lt;sf-item value=\\\"cat\\\"&gt;Cat&lt;/sf-item&gt;\\n                &lt;sf-item value=\\\"dolphin\\\"&gt;Dolphin&lt;/sf-item&gt;\\n            &lt;/sf-field&gt;\\n        &lt;/sf-field&gt;\\n        &lt;sf-field\\n            name=\\\"bornOn\\\"\\n            widget=\\\"date\\\"\\n            format=\\\"date\\\"\\n            [schema]=\\\"{ default: '1800-12-12' }\\\"\\n            description=\\\"(Born On)\\\"\\n            placeholder=\\\"Ex: 2009-03-11\\\"&gt;\\n            Born On\\n        &lt;/sf-field&gt;\\n        &lt;sf-field\\n            name=\\\"moreInfo\\\"\\n            type=\\\"boolean\\\"\\n            description=\\\"More information?\\\"\\n            widget=\\\"checkbox\\\"\\n            [schema]=\\\"{ default: true }\\\"&gt;&lt;/sf-field&gt;\\n        &lt;sf-field\\n            name=\\\"favoriteColor\\\"\\n            widget=\\\"color\\\"\\n            [schema]=\\\"{ default: '#aaa111', pattern: '^#[0-9a-fA-F]{6}$', visibleIf: { moreInfo: [true] } }\\\"&gt;\\n            Favorite color\\n        &lt;/sf-field&gt;\\n        &lt;sf-field name=\\\"colors\\\" type=\\\"array\\\" widget=\\\"array\\\"&gt;\\n            Colors\\n            &lt;sf-field type=\\\"string\\\" widget=\\\"color\\\"&gt;\\n                &lt;sf-button id=\\\"Remove\\\" (click)=\\\"onClick('Supprimer')\\\"&gt;Supprimer&lt;/sf-button&gt;\\n            &lt;/sf-field&gt;\\n            &lt;sf-button id=\\\"addItem\\\" (click)=\\\"onClick('Ajouter')\\\"&gt;Ajouter&lt;/sf-button&gt;\\n            &lt;sf-button id=\\\"reset\\\" (click)=\\\"onClick('Reset')\\\"&gt;Reset&lt;/sf-button&gt;\\n        &lt;/sf-field&gt;\\n    &lt;/sf-field&gt;\\n\\n    &lt;sf-field name=\\\"survey\\\" type=\\\"object\\\"&gt;\\n        Little survey\\n        &lt;sf-field name=\\\"q1\\\" description=\\\"Enter a number\\\"&gt;&lt;/sf-field&gt;\\n        &lt;sf-field name=\\\"q2\\\" type=\\\"object\\\" description=\\\"Address\\\"&gt;\\n            &lt;sf-field\\n                name=\\\"color\\\"\\n                description=\\\"Color\\\"\\n                widget=\\\"color\\\"\\n                [schema]=\\\"{ default: '#aaa000', pattern: 'ff$' }\\\"&gt;&lt;/sf-field&gt;\\n            &lt;sf-field\\n                name=\\\"number\\\"\\n                description=\\\"Zip\\\"\\n                widget=\\\"number\\\"\\n                [schema]=\\\"{ default: 15 }\\\"&gt;&lt;/sf-field&gt;\\n        &lt;/sf-field&gt;\\n    &lt;/sf-field&gt;\\n    &lt;sf-field name=\\\"transaction\\\" type=\\\"object\\\"&gt;\\n        Part 2 - Transactions\\n        &lt;sf-field\\n            name=\\\"transactionNumber\\\"\\n            description=\\\"Transaction number\\\"\\n            widget=\\\"number\\\"\\n            [readOnly]=\\\"true\\\"\\n            [schema]=\\\"{ default: 15 }\\\"&gt;&lt;/sf-field&gt;\\n        &lt;sf-field\\n            name=\\\"transactionDescription\\\"\\n            widget=\\\"textarea\\\"\\n            description=\\\"What is being transacted\\\"&gt;&lt;/sf-field&gt;\\n\\n        &lt;sf-field name=\\\"promotion\\\" widget=\\\"radio\\\" description=\\\"promotion\\\"&gt;\\n            &lt;sf-item value=\\\"student\\\"&gt;Student discount (20%)&lt;/sf-item&gt;\\n            &lt;sf-item value=\\\"summer\\\"&gt;Summer 2016 discount (15%)&lt;/sf-item&gt;\\n            &lt;sf-item value=\\\"none\\\"&gt;None&lt;/sf-item&gt;\\n        &lt;/sf-field&gt;\\n\\n        &lt;sf-field name=\\\"category\\\" type=\\\"array\\\" widget=\\\"select\\\" description=\\\"Category\\\"&gt;\\n            &lt;sf-field type=\\\"string\\\"&gt;\\n                &lt;sf-item value=\\\"design\\\"&gt;Design&lt;/sf-item&gt;\\n                &lt;sf-item value=\\\"hightech\\\"&gt;High-Tech&lt;/sf-item&gt;\\n                &lt;sf-item value=\\\"materials\\\"&gt;Materials&lt;/sf-item&gt;\\n                &lt;sf-item value=\\\"services\\\"&gt;Services&lt;/sf-item&gt;\\n            &lt;/sf-field&gt;\\n        &lt;/sf-field&gt;\\n    &lt;/sf-field&gt;\\n\\n    &lt;sf-field name=\\\"shipping\\\" type=\\\"object\\\"&gt;\\n        Part 3 - Shipping\\n        &lt;sf-field\\n            name=\\\"numberOfBoxes\\\"\\n            description=\\\"Number of boxes required\\\"\\n            widget=\\\"range\\\"\\n            [schema]=\\\"{ minimun: 1, maximun: 10 }\\\"&gt;&lt;/sf-field&gt;\\n\\n        &lt;sf-field\\n            name=\\\"delivery\\\"\\n            type=\\\"string\\\"\\n            widget=\\\"select\\\"\\n            [schema]=\\\"{ default: 'fedex' }\\\"\\n            description=\\\"Delivery service\\\"&gt;\\n            &lt;sf-item value=\\\"fedex\\\"&gt;Fedex&lt;/sf-item&gt;\\n            &lt;sf-item value=\\\"ups\\\"&gt;UPS&lt;/sf-item&gt;\\n            &lt;sf-item value=\\\"other\\\"&gt;Other&lt;/sf-item&gt;\\n        &lt;/sf-field&gt;\\n\\n    &lt;/sf-field&gt;\\n\\n    &lt;sf-field name=\\\"contact\\\" type=\\\"object\\\"&gt;\\n        Part 4 - Email\\n        &lt;sf-field\\n            name=\\\"useCustomEmail\\\"\\n            type=\\\"boolean\\\"\\n            description=\\\"Write a custom email ?\\\"&gt;&lt;/sf-field&gt;\\n        &lt;sf-field\\n            *ngIf=\\\"model?.contact?.useCustomEmail\\\"\\n            name=\\\"customEmail\\\"\\n            widget=\\\"textarea\\\"\\n            description=\\\"Email to send\\\"&gt;&lt;/sf-field&gt;\\n    &lt;/sf-field&gt;\\n\\n    &lt;sf-field name=\\\"confirmation\\\" type=\\\"object\\\"&gt;\\n        Part 5 - Confirmation\\n        &lt;sf-field name=\\\"confirmationEmail\\\" format=\\\"email\\\" description=\\\"Email\\\"&gt;&lt;/sf-field&gt;\\n        &lt;sf-field name=\\\"password\\\" widget=\\\"password\\\" description=\\\"Password\\\"&gt;&lt;/sf-field&gt;\\n    &lt;/sf-field&gt;\\n\\n    &lt;sf-button (click)=\\\"onClick('Something')\\\"&gt;Do Something&lt;/sf-button&gt;\\n&lt;/sf-form&gt;\\n\\n</textarea>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n            <h3>Model:</h3>\\n            <pre>{{model | json}}</pre>\\n        </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-template-schema-example',\n  templateUrl: './template-schema-example.component.html',\n  styleUrls: ['./template-schema-example.component.css']\n})\nexport class TemplateSchemaExampleComponent implements OnInit {\n\n  model: any = {};\n\n  constructor() { }\n\n  onClick(message: string) {\n    alert(message);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}